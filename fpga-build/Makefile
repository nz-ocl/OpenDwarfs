# Makefile.in generated by automake 1.11.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# Copyright 2010 by Virginia Polytechnic Institute and State
# University. All rights reserved. Virginia Polytechnic Institute and
# State University (Virginia Tech) owns the software and its
# associated documentation.
#

#
# Copyright 2010 by Virginia Polytechnic Institute and State
# University. All rights reserved. Virginia Polytechnic Institute and
# State University (Virginia Tech) owns the software and its
# associated documentation.
#

#
# Copyright 2010 by Virginia Polytechnic Institute and State
# University. All rights reserved. Virginia Polytechnic Institute and
# State University (Virginia Tech) owns the software and its
# associated documentation.
#

#
# Copyright 2010 by Virginia Polytechnic Institute and State
# University. All rights reserved. Virginia Polytechnic Institute and
# State University (Virginia Tech) owns the software and its
# associated documentation.
#

#
# Copyright 2010 by Virginia Polytechnic Institute and State
# University. All rights reserved. Virginia Polytechnic Institute and
# State University (Virginia Tech) owns the software and its
# associated documentation.
#

#
# Copyright 2010 by Virginia Polytechnic Institute and State
# University. All rights reserved. Virginia Polytechnic Institute and
# State University (Virginia Tech) owns the software and its
# associated documentation.
#

#
# Copyright 2010 by Virginia Polytechnic Institute and State
# University. All rights reserved. Virginia Polytechnic Institute and
# State University (Virginia Tech) owns the software and its
# associated documentation.
#

#
# Copyright 2010 by Virginia Polytechnic Institute and State
# University. All rights reserved. Virginia Polytechnic Institute and
# State University (Virginia Tech) owns the software and its
# associated documentation.
#

#
# Copyright 2010 by Virginia Polytechnic Institute and State
# University. All rights reserved. Virginia Polytechnic Institute and
# State University (Virginia Tech) owns the software and its
# associated documentation.
#

#
# Copyright 2010 by Virginia Polytechnic Institute and State
# University. All rights reserved. Virginia Polytechnic Institute and
# State University (Virginia Tech) owns the software and its
# associated documentation.
#

#
# Copyright 2010 by Virginia Polytechnic Institute and State
# University. All rights reserved. Virginia Polytechnic Institute and
# State University (Virginia Tech) owns the software and its
# associated documentation.
#

#
# Copyright 2010 by Virginia Polytechnic Institute and State
# University. All rights reserved. Virginia Polytechnic Institute and
# State University (Virginia Tech) owns the software and its
# associated documentation.
#

#
# Copyright 2010 by Virginia Polytechnic Institute and State
# University. All rights reserved. Virginia Polytechnic Institute and
# State University (Virginia Tech) owns the software and its
# associated documentation.
#

#
# Copyright 2010 by Virginia Polytechnic Institute and State
# University. All rights reserved. Virginia Polytechnic Institute and
# State University (Virginia Tech) owns the software and its
# associated documentation.
#

#
# Copyright 2010 by Virginia Polytechnic Institute and State
# University. All rights reserved. Virginia Polytechnic Institute and
# State University (Virginia Tech) owns the software and its
# associated documentation.
#


VPATH = ..
pkgdatadir = $(datadir)/opencl-apps
pkgincludedir = $(includedir)/opencl-apps
pkglibdir = $(libdir)/opencl-apps
pkglibexecdir = $(libexecdir)/opencl-apps
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = ocd$(EXEEXT) $(am__EXEEXT_1) $(am__EXEEXT_2) \
	$(am__EXEEXT_3) $(am__EXEEXT_4) $(am__EXEEXT_5) \
	$(am__EXEEXT_6) $(am__EXEEXT_7) $(am__EXEEXT_8) \
	$(am__EXEEXT_9) $(am__EXEEXT_10) $(am__EXEEXT_11) \
	$(am__EXEEXT_12) $(am__EXEEXT_13) $(am__EXEEXT_14)
DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in \
	$(srcdir)/branch-and-bound/astar/Makefile.mk \
	$(srcdir)/combinational-logic/crc/Makefile.mk \
	$(srcdir)/config.h.in \
	$(srcdir)/dense-linear-algebra/kmeans/Makefile.mk \
	$(srcdir)/dense-linear-algebra/lud/Makefile.mk \
	$(srcdir)/dynamic-programming/nw/Makefile.mk \
	$(srcdir)/dynamic-programming/swat/Makefile.mk \
	$(srcdir)/finite-state-machine/tdm/Makefile.mk \
	$(srcdir)/graph-traversal/bfs/Makefile.mk \
	$(srcdir)/n-body-methods/gem/Makefile.mk \
	$(srcdir)/samplecl/Makefile.mk \
	$(srcdir)/sparse-linear-algebra/SPMV/Makefile.mk \
	$(srcdir)/spectral-methods/fft/Makefile.mk \
	$(srcdir)/structured-grids/srad/Makefile.mk \
	$(srcdir)/unstructured-grids/cfd/Makefile.mk \
	$(top_srcdir)/configure m4/compile m4/config.guess \
	m4/config.sub m4/depcomp m4/install-sh m4/ltmain.sh m4/missing
am__append_1 = gemnoui
am__append_2 = gem-all-local
am__append_3 = gem-exec-local
am__append_4 = needle
am__append_5 = nw-all-local
am__append_6 = nw-exec-local
am__append_7 = swat
am__append_8 = swat-all-local
am__append_9 = swat-exec-local
am__append_10 = srad
am__append_11 = srad-all-local
am__append_12 = srad-exec-local
am__append_13 = lud
am__append_14 = lud-all-local
am__append_15 = lud-exec-local
am__append_16 = kmeans
am__append_17 = kmeans-all-local
am__append_18 = kmeans-exec-local
am__append_19 = scl
am__append_20 = samplecl-all-local
am__append_21 = samplecl-exec-local
am__append_22 = clfft
am__append_23 = clfft-all-local
am__append_24 = clfft-exec-local
am__append_25 = csr createcsr
am__append_26 = csr-all-local
am__append_27 = csr-exec-local
am__append_28 = crc createcrc
am__append_29 = dwarf-crc-all-local
am__append_30 = dwarf-crc-exec-local
am__append_31 = cfd 
am__append_32 = dwarf-cfd-all-local
am__append_33 = dwarf-cfd-exec-local
am__append_34 = bfs
am__append_35 = bfs-all-local
am__append_36 = bfs-exec-local
am__append_37 = tdm
am__append_38 = tdm-all-local
am__append_39 = tdm-exec-local
am__append_40 = astar
am__append_41 = astar-all-local
am__append_42 = astar-exec-local
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/aclocal_cache.m4 \
	$(top_srcdir)/m4/aclocal_cc.m4 $(top_srcdir)/m4/aclocal_cxx.m4 \
	$(top_srcdir)/m4/aclocal_util.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
libopts_a_AR = $(AR) $(ARFLAGS)
libopts_a_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am_libopts_a_OBJECTS = opts/opts.$(OBJEXT)
libopts_a_OBJECTS = $(am_libopts_a_OBJECTS)
am__EXEEXT_1 = gemnoui$(EXEEXT)
am__EXEEXT_2 = needle$(EXEEXT)
am__EXEEXT_3 = swat$(EXEEXT)
am__EXEEXT_4 = srad$(EXEEXT)
am__EXEEXT_5 = lud$(EXEEXT)
am__EXEEXT_6 = kmeans$(EXEEXT)
am__EXEEXT_7 = scl$(EXEEXT)
am__EXEEXT_8 = clfft$(EXEEXT)
am__EXEEXT_9 = csr$(EXEEXT) createcsr$(EXEEXT)
am__EXEEXT_10 = crc$(EXEEXT) createcrc$(EXEEXT)
am__EXEEXT_11 = cfd$(EXEEXT)
am__EXEEXT_12 = bfs$(EXEEXT)
am__EXEEXT_13 = tdm$(EXEEXT)
am__EXEEXT_14 = astar$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__astar_SOURCES_DIST = branch-and-bound/astar/astar.c
am_astar_OBJECTS =  \
	branch-and-bound/astar/astar.$(OBJEXT)
astar_OBJECTS = $(am_astar_OBJECTS)
astar_LDADD = $(LDADD)
astar_DEPENDENCIES = include/common_ocl.o include/rdtsc.o libopts.a \
	include/common_util.o
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__bfs_SOURCES_DIST = graph-traversal/bfs/bfs.cpp
am_bfs_OBJECTS = graph-traversal/bfs/bfs.$(OBJEXT)
bfs_OBJECTS = $(am_bfs_OBJECTS)
bfs_LDADD = $(LDADD)
bfs_DEPENDENCIES = include/common_ocl.o include/rdtsc.o libopts.a \
	include/common_util.o
am__cfd_SOURCES_DIST = unstructured-grids/cfd/cfd.cpp
am_cfd_OBJECTS = unstructured-grids/cfd/cfd.$(OBJEXT)
cfd_OBJECTS = $(am_cfd_OBJECTS)
cfd_LDADD = $(LDADD)
cfd_DEPENDENCIES = include/common_ocl.o include/rdtsc.o libopts.a \
	include/common_util.o
am__clfft_SOURCES_DIST = spectral-methods/fft/src/opencl/fft/fft.cpp \
	spectral-methods/fft/src/opencl/fft/fftlib.cpp \
	spectral-methods/fft/src/opencl/common/main.cpp \
	spectral-methods/fft/src/opencl/common/Event.cpp \
	spectral-methods/fft/src/opencl/common/OpenCLDeviceInfo.cpp \
	spectral-methods/fft/src/opencl/common/OpenCLNodePlatformContainer.cpp \
	spectral-methods/fft/src/opencl/common/OpenCLPlatform.cpp \
	spectral-methods/fft/src/common/OptionParser.cpp \
	spectral-methods/fft/src/common/ResultDatabase.cpp \
	spectral-methods/fft/src/common/Timer.cpp \
	spectral-methods/fft/src/common/Option.cpp \
	spectral-methods/fft/src/common/InvalidArgValue.cpp
am_clfft_OBJECTS = spectral-methods/fft/src/opencl/fft/clfft-fft.$(OBJEXT) \
	spectral-methods/fft/src/opencl/fft/clfft-fftlib.$(OBJEXT) \
	spectral-methods/fft/src/opencl/common/clfft-main.$(OBJEXT) \
	spectral-methods/fft/src/opencl/common/clfft-Event.$(OBJEXT) \
	spectral-methods/fft/src/opencl/common/clfft-OpenCLDeviceInfo.$(OBJEXT) \
	spectral-methods/fft/src/opencl/common/clfft-OpenCLNodePlatformContainer.$(OBJEXT) \
	spectral-methods/fft/src/opencl/common/clfft-OpenCLPlatform.$(OBJEXT) \
	spectral-methods/fft/src/common/clfft-OptionParser.$(OBJEXT) \
	spectral-methods/fft/src/common/clfft-ResultDatabase.$(OBJEXT) \
	spectral-methods/fft/src/common/clfft-Timer.$(OBJEXT) \
	spectral-methods/fft/src/common/clfft-Option.$(OBJEXT) \
	spectral-methods/fft/src/common/clfft-InvalidArgValue.$(OBJEXT)
clfft_OBJECTS = $(am_clfft_OBJECTS)
clfft_LDADD = $(LDADD)
clfft_DEPENDENCIES = include/common_ocl.o include/rdtsc.o libopts.a \
	include/common_util.o
am__crc_SOURCES_DIST = combinational-logic/crc/src/crc_algo.c \
	combinational-logic/crc/src-common/crc_formats.c
am_crc_OBJECTS = combinational-logic/crc/src/crc_algo.$(OBJEXT) \
	combinational-logic/crc/src-common/crc_formats.$(OBJEXT)
crc_OBJECTS = $(am_crc_OBJECTS)
crc_LDADD = $(LDADD)
crc_DEPENDENCIES = include/common_ocl.o include/rdtsc.o libopts.a \
	include/common_util.o
crc_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(crc_LDFLAGS) $(LDFLAGS) -o $@
am__createcrc_SOURCES_DIST =  \
	combinational-logic/crc/src-test/createcrc.c \
	combinational-logic/crc/src-common/crc_formats.c
am_createcrc_OBJECTS = combinational-logic/crc/src-test/createcrc.$(OBJEXT) \
	combinational-logic/crc/src-common/crc_formats.$(OBJEXT)
createcrc_OBJECTS = $(am_createcrc_OBJECTS)
createcrc_DEPENDENCIES = include/common_util.o
am__createcsr_SOURCES_DIST =  \
	sparse-linear-algebra/SPMV/src-test/createcsr.c \
	sparse-linear-algebra/SPMV/src-common/sparse_formats.c \
	sparse-linear-algebra/SPMV/src-common/ziggurat.c \
	sparse-linear-algebra/SPMV/src-common/common.c
am_createcsr_OBJECTS = sparse-linear-algebra/SPMV/src-test/createcsr.$(OBJEXT) \
	sparse-linear-algebra/SPMV/src-common/sparse_formats.$(OBJEXT) \
	sparse-linear-algebra/SPMV/src-common/ziggurat.$(OBJEXT) \
	sparse-linear-algebra/SPMV/src-common/common.$(OBJEXT)
createcsr_OBJECTS = $(am_createcsr_OBJECTS)
createcsr_DEPENDENCIES = include/common_util.o
am__csr_SOURCES_DIST = sparse-linear-algebra/SPMV/src/csr.c \
	sparse-linear-algebra/SPMV/src-common/sparse_formats.c \
	sparse-linear-algebra/SPMV/src-common/ziggurat.c \
	sparse-linear-algebra/SPMV/src-common/common.c
am_csr_OBJECTS =  \
	sparse-linear-algebra/SPMV/src/csr.$(OBJEXT) \
	sparse-linear-algebra/SPMV/src-common/sparse_formats.$(OBJEXT) \
	sparse-linear-algebra/SPMV/src-common/ziggurat.$(OBJEXT) \
	sparse-linear-algebra/SPMV/src-common/common.$(OBJEXT)
csr_OBJECTS = $(am_csr_OBJECTS)
csr_LDADD = $(LDADD)
csr_DEPENDENCIES = include/common_ocl.o include/rdtsc.o libopts.a \
	include/common_util.o
am__gemnoui_SOURCES_DIST = n-body-methods/gem/dump_vertices.c \
	n-body-methods/gem/floating_centers.c \
	n-body-methods/gem/radix_sort.c n-body-methods/gem/read_pqr.c \
	n-body-methods/gem/vector_math.c \
	n-body-methods/gem/write_grid.c \
	n-body-methods/gem/extrapolate_bonds.c \
	n-body-methods/gem/populate_stats.c \
	n-body-methods/gem/read_msms.c n-body-methods/gem/run_msms.c \
	n-body-methods/gem/write_avs.c n-body-methods/gem/write_xyzr.c \
	n-body-methods/gem/calculate_potential.cpp \
	n-body-methods/gem/check_cmdline.cpp \
	n-body-methods/gem/estimate_a.cpp \
	n-body-methods/gem/gem_no_ui.cpp \
	n-body-methods/gem/open_pqr_run_msms.cpp
am_gemnoui_OBJECTS = n-body-methods/gem/gemnoui-dump_vertices.$(OBJEXT) \
	n-body-methods/gem/gemnoui-floating_centers.$(OBJEXT) \
	n-body-methods/gem/gemnoui-radix_sort.$(OBJEXT) \
	n-body-methods/gem/gemnoui-read_pqr.$(OBJEXT) \
	n-body-methods/gem/gemnoui-vector_math.$(OBJEXT) \
	n-body-methods/gem/gemnoui-write_grid.$(OBJEXT) \
	n-body-methods/gem/gemnoui-extrapolate_bonds.$(OBJEXT) \
	n-body-methods/gem/gemnoui-populate_stats.$(OBJEXT) \
	n-body-methods/gem/gemnoui-read_msms.$(OBJEXT) \
	n-body-methods/gem/gemnoui-run_msms.$(OBJEXT) \
	n-body-methods/gem/gemnoui-write_avs.$(OBJEXT) \
	n-body-methods/gem/gemnoui-write_xyzr.$(OBJEXT) \
	n-body-methods/gem/gemnoui-calculate_potential.$(OBJEXT) \
	n-body-methods/gem/gemnoui-check_cmdline.$(OBJEXT) \
	n-body-methods/gem/gemnoui-estimate_a.$(OBJEXT) \
	n-body-methods/gem/gemnoui-gem_no_ui.$(OBJEXT) \
	n-body-methods/gem/gemnoui-open_pqr_run_msms.$(OBJEXT)
gemnoui_OBJECTS = $(am_gemnoui_OBJECTS)
gemnoui_LDADD = $(LDADD)
gemnoui_DEPENDENCIES = include/common_ocl.o include/rdtsc.o libopts.a \
	include/common_util.o
am__kmeans_SOURCES_DIST = dense-linear-algebra/kmeans/kmeans.c \
	dense-linear-algebra/kmeans/cluster.c \
	dense-linear-algebra/kmeans/getopt.c \
	dense-linear-algebra/kmeans/kmeans_clustering.c \
	dense-linear-algebra/kmeans/kmeans_opencl.cpp \
	dense-linear-algebra/kmeans/rmse.c
am_kmeans_OBJECTS = dense-linear-algebra/kmeans/kmeans.$(OBJEXT) \
	dense-linear-algebra/kmeans/cluster.$(OBJEXT) \
	dense-linear-algebra/kmeans/getopt.$(OBJEXT) \
	dense-linear-algebra/kmeans/kmeans_clustering.$(OBJEXT) \
	dense-linear-algebra/kmeans/kmeans_opencl.$(OBJEXT) \
	dense-linear-algebra/kmeans/rmse.$(OBJEXT)
kmeans_OBJECTS = $(am_kmeans_OBJECTS)
kmeans_LDADD = $(LDADD)
kmeans_DEPENDENCIES = include/common_ocl.o include/rdtsc.o libopts.a \
	include/common_util.o
am__lud_SOURCES_DIST = dense-linear-algebra/lud/lud.c \
	dense-linear-algebra/lud/common.c
am_lud_OBJECTS =  \
	dense-linear-algebra/lud/lud.$(OBJEXT) \
	dense-linear-algebra/lud/common.$(OBJEXT)
lud_OBJECTS = $(am_lud_OBJECTS)
lud_LDADD = $(LDADD)
lud_DEPENDENCIES = include/common_ocl.o include/rdtsc.o libopts.a \
	include/common_util.o
am__needle_SOURCES_DIST = dynamic-programming/nw/needle.c
am_needle_OBJECTS =  \
	dynamic-programming/nw/needle.$(OBJEXT)
needle_OBJECTS = $(am_needle_OBJECTS)
needle_LDADD = $(LDADD)
needle_DEPENDENCIES = include/common_ocl.o include/rdtsc.o libopts.a \
	include/common_util.o
am_ocd_OBJECTS = include/common_ocl.$(OBJEXT) include/rdtsc.$(OBJEXT) \
	include/common_util.$(OBJEXT)
ocd_OBJECTS = $(am_ocd_OBJECTS)
ocd_LDADD = $(LDADD)
ocd_DEPENDENCIES = include/common_ocl.o include/rdtsc.o libopts.a \
	include/common_util.o
am__scl_SOURCES_DIST = samplecl/samplecl.c
am_scl_OBJECTS = samplecl/samplecl.$(OBJEXT)
scl_OBJECTS = $(am_scl_OBJECTS)
scl_LDADD = $(LDADD)
scl_DEPENDENCIES = include/common_ocl.o include/rdtsc.o libopts.a \
	include/common_util.o
am__srad_SOURCES_DIST = structured-grids/srad/srad.c
am_srad_OBJECTS =  \
	structured-grids/srad/srad.$(OBJEXT)
srad_OBJECTS = $(am_srad_OBJECTS)
srad_LDADD = $(LDADD)
srad_DEPENDENCIES = include/common_ocl.o include/rdtsc.o libopts.a \
	include/common_util.o
srad_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(srad_LDFLAGS) $(LDFLAGS) -o $@
am__swat_SOURCES_DIST = dynamic-programming/swat/alignments.cpp \
	dynamic-programming/swat/prints.cpp \
	dynamic-programming/swat/sequences.cpp \
	dynamic-programming/swat/swat.cpp \
	dynamic-programming/swat/param.cpp \
	dynamic-programming/swat/timeRec.cpp
am_swat_OBJECTS = dynamic-programming/swat/alignments.$(OBJEXT) \
	dynamic-programming/swat/prints.$(OBJEXT) \
	dynamic-programming/swat/sequences.$(OBJEXT) \
	dynamic-programming/swat/swat.$(OBJEXT) \
	dynamic-programming/swat/param.$(OBJEXT) \
	dynamic-programming/swat/timeRec.$(OBJEXT)
swat_OBJECTS = $(am_swat_OBJECTS)
swat_LDADD = $(LDADD)
swat_DEPENDENCIES = include/common_ocl.o include/rdtsc.o libopts.a \
	include/common_util.o
am__tdm_SOURCES_DIST =  \
	finite-state-machine/tdm/GpuTemporalDataMining.cpp
am_tdm_OBJECTS = finite-state-machine/tdm/GpuTemporalDataMining.$(OBJEXT)
tdm_OBJECTS = $(am_tdm_OBJECTS)
tdm_LDADD = $(LDADD)
tdm_DEPENDENCIES = include/common_ocl.o include/rdtsc.o libopts.a \
	include/common_util.o
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/m4/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libopts_a_SOURCES) $(astar_SOURCES) $(bfs_SOURCES) \
	$(cfd_SOURCES) $(clfft_SOURCES) $(crc_SOURCES) \
	$(createcrc_SOURCES) $(createcsr_SOURCES) $(csr_SOURCES) \
	$(gemnoui_SOURCES) $(kmeans_SOURCES) $(lud_SOURCES) \
	$(needle_SOURCES) $(ocd_SOURCES) $(scl_SOURCES) \
	$(srad_SOURCES) $(swat_SOURCES) $(tdm_SOURCES)
DIST_SOURCES = $(libopts_a_SOURCES) $(am__astar_SOURCES_DIST) \
	$(am__bfs_SOURCES_DIST) $(am__cfd_SOURCES_DIST) \
	$(am__clfft_SOURCES_DIST) $(am__crc_SOURCES_DIST) \
	$(am__createcrc_SOURCES_DIST) $(am__createcsr_SOURCES_DIST) \
	$(am__csr_SOURCES_DIST) $(am__gemnoui_SOURCES_DIST) \
	$(am__kmeans_SOURCES_DIST) $(am__lud_SOURCES_DIST) \
	$(am__needle_SOURCES_DIST) $(ocd_SOURCES) \
	$(am__scl_SOURCES_DIST) $(am__srad_SOURCES_DIST) \
	$(am__swat_SOURCES_DIST) $(am__tdm_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d "$(distdir)" \
    || { find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr "$(distdir)"; }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/tjkenney/workspace/OpenDwarfs/m4/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/tjkenney/workspace/OpenDwarfs/m4/missing --run tar
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /home/tjkenney/workspace/OpenDwarfs/m4/missing --run autoconf
AUTOHEADER = ${SHELL} /home/tjkenney/workspace/OpenDwarfs/m4/missing --run autoheader
AUTOMAKE = ${SHELL} /home/tjkenney/workspace/OpenDwarfs/m4/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS =  
CPP = gcc -E
CPPFLAGS = -I/home/fpga_tools/altera/13.0.1.232_dp1/AOCL/host/include
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INCLUDEFLAGS =  -I/home/fpga_tools/altera/13.0.1.232_dp1/AOCL/host/include
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBFLAGS =  -lalterahalmmd -lalterammdpcie -lpkg_editor -lalteracl -lelf -lrt -lstdc++
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/tjkenney/workspace/OpenDwarfs/m4/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OPENCL_SDK_PREFIX = 
OTOOL = 
OTOOL64 = 
PACKAGE = opencl-apps
PACKAGE_BUGREPORT = 
PACKAGE_NAME = opencl-apps
PACKAGE_STRING = opencl-apps 0
PACKAGE_TARNAME = opencl-apps
PACKAGE_VERSION = 0
PATH_SEPARATOR = :
RANLIB = ranlib
RPATHFLAGS =  -Wl,-rpath=/home/fpga_tools/altera/13.0.1.232_dp1/AOCL/linux64/lib -Wl,-rpath=/home/fpga_tools/altera/13.0.1.232_dp1/AOCL/host/linux64/lib
SEARCHFLAGS =  -L/home/fpga_tools/altera/13.0.1.232_dp1/AOCL/linux64/lib -L/home/fpga_tools/altera/13.0.1.232_dp1/AOCL/host/linux64/lib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0
abs_builddir = /home/tjkenney/workspace/OpenDwarfs/fpga-build
abs_srcdir = /home/tjkenney/workspace/OpenDwarfs/fpga-build/..
abs_top_builddir = /home/tjkenney/workspace/OpenDwarfs/fpga-build
abs_top_srcdir = /home/tjkenney/workspace/OpenDwarfs/fpga-build/..
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/tjkenney/workspace/OpenDwarfs/m4/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = ..
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = ..
AUTOMAKE_OPTIONS = subdir-objects
ACLOCAL_AMFLAGS = -I m4
AM_CPPFLAGS = -Werror  -I/home/fpga_tools/altera/13.0.1.232_dp1/AOCL/host/include
AM_LDFLAGS =  -L/home/fpga_tools/altera/13.0.1.232_dp1/AOCL/linux64/lib -L/home/fpga_tools/altera/13.0.1.232_dp1/AOCL/host/linux64/lib  -lalterahalmmd -lalterammdpcie -lpkg_editor -lalteracl -lelf -lrt -lstdc++  -Wl,-rpath=/home/fpga_tools/altera/13.0.1.232_dp1/AOCL/linux64/lib -Wl,-rpath=/home/fpga_tools/altera/13.0.1.232_dp1/AOCL/host/linux64/lib
all_local = $(am__append_2) $(am__append_5) $(am__append_8) \
	$(am__append_11) $(am__append_14) $(am__append_17) \
	$(am__append_20) $(am__append_23) $(am__append_26) \
	$(am__append_29) $(am__append_32) $(am__append_35) \
	$(am__append_38) $(am__append_41)
exec_local = $(am__append_3) $(am__append_6) $(am__append_9) \
	$(am__append_12) $(am__append_15) $(am__append_18) \
	$(am__append_21) $(am__append_24) $(am__append_27) \
	$(am__append_30) $(am__append_33) $(am__append_36) \
	$(am__append_39) $(am__append_42)
ocd_SOURCES = include/common_ocl.c include/rdtsc.c include/common_util.c 
ocd_LINK = true
noinst_LIBRARIES = libopts.a
libopts_a_SOURCES = opts/opts.c 
LDADD = include/common_ocl.o include/rdtsc.o libopts.a include/common_util.o
gemnoui_SOURCES = n-body-methods/gem/dump_vertices.c n-body-methods/gem/floating_centers.c \
	n-body-methods/gem/radix_sort.c n-body-methods/gem/read_pqr.c \
	n-body-methods/gem/vector_math.c n-body-methods/gem/write_grid.c \
	n-body-methods/gem/extrapolate_bonds.c n-body-methods/gem/populate_stats.c \
	n-body-methods/gem/read_msms.c n-body-methods/gem/run_msms.c \
	n-body-methods/gem/write_avs.c n-body-methods/gem/write_xyzr.c \
	n-body-methods/gem/calculate_potential.cpp n-body-methods/gem/check_cmdline.cpp \
	n-body-methods/gem/estimate_a.cpp n-body-methods/gem/gem_no_ui.cpp \
	n-body-methods/gem/open_pqr_run_msms.cpp 

gemnoui_CPPFLAGS = $(AM_CPPFLAGS) -I$(top_srcdir)/n-body-methods/gem/include \
	-I$(top_srcdir)/n-body-methods/gem/include/visualize/dialogs -DNO_UI 

needle_SOURCES = dynamic-programming/nw/needle.c
swat_SOURCES = dynamic-programming/swat/alignments.cpp dynamic-programming/swat/prints.cpp \
				 dynamic-programming/swat/sequences.cpp dynamic-programming/swat/swat.cpp \
				 dynamic-programming/swat/param.cpp dynamic-programming/swat/timeRec.cpp

srad_SOURCES = structured-grids/srad/srad.c
srad_LDFLAGS = -lm  -L/home/fpga_tools/altera/13.0.1.232_dp1/AOCL/linux64/lib -L/home/fpga_tools/altera/13.0.1.232_dp1/AOCL/host/linux64/lib  -lalterahalmmd -lalterammdpcie -lpkg_editor -lalteracl -lelf -lrt -lstdc++  -Wl,-rpath=/home/fpga_tools/altera/13.0.1.232_dp1/AOCL/linux64/lib -Wl,-rpath=/home/fpga_tools/altera/13.0.1.232_dp1/AOCL/host/linux64/lib
lud_SOURCES = dense-linear-algebra/lud/lud.c dense-linear-algebra/lud/common.c
kmeans_SOURCES = dense-linear-algebra/kmeans/kmeans.c \
	dense-linear-algebra/kmeans/cluster.c \
	dense-linear-algebra/kmeans/getopt.c \
	dense-linear-algebra/kmeans/kmeans_clustering.c \
	dense-linear-algebra/kmeans/kmeans_opencl.cpp \
	dense-linear-algebra/kmeans/rmse.c

scl_SOURCES = samplecl/samplecl.c
clfft_SOURCES = spectral-methods/fft/src/opencl/fft/fft.cpp spectral-methods/fft/src/opencl/fft/fftlib.cpp spectral-methods/fft/src/opencl/common/main.cpp spectral-methods/fft/src/opencl/common/Event.cpp spectral-methods/fft/src/opencl/common/OpenCLDeviceInfo.cpp spectral-methods/fft/src/opencl/common/OpenCLNodePlatformContainer.cpp spectral-methods/fft/src/opencl/common/OpenCLPlatform.cpp spectral-methods/fft/src/common/OptionParser.cpp spectral-methods/fft/src/common/ResultDatabase.cpp spectral-methods/fft/src/common/Timer.cpp spectral-methods/fft/src/common/Option.cpp spectral-methods/fft/src/common/InvalidArgValue.cpp 
clfft_CPPFLAGS = -I$(top_srcdir)/spectral-methods/fft/src/common -I$(top_srcdir)/spectral-methods/fft/src/opencl/common  -I/home/fpga_tools/altera/13.0.1.232_dp1/AOCL/host/include
csr_SOURCES = sparse-linear-algebra/SPMV/src/csr.c sparse-linear-algebra/SPMV/src-common/sparse_formats.c sparse-linear-algebra/SPMV/src-common/ziggurat.c sparse-linear-algebra/SPMV/src-common/common.c
createcsr_SOURCES = sparse-linear-algebra/SPMV/src-test/createcsr.c sparse-linear-algebra/SPMV/src-common/sparse_formats.c sparse-linear-algebra/SPMV/src-common/ziggurat.c sparse-linear-algebra/SPMV/src-common/common.c
createcsr_LDADD = include/common_util.o
createcsr_LINK = $(CCLD) -lm -o $@
crc_LDFLAGS = -lm  -L/home/fpga_tools/altera/13.0.1.232_dp1/AOCL/linux64/lib -L/home/fpga_tools/altera/13.0.1.232_dp1/AOCL/host/linux64/lib  -lalterahalmmd -lalterammdpcie -lpkg_editor -lalteracl -lelf -lrt -lstdc++  -Wl,-rpath=/home/fpga_tools/altera/13.0.1.232_dp1/AOCL/linux64/lib -Wl,-rpath=/home/fpga_tools/altera/13.0.1.232_dp1/AOCL/host/linux64/lib
crc_SOURCES = combinational-logic/crc/src/crc_algo.c combinational-logic/crc/src-common/crc_formats.c
createcrc_SOURCES = combinational-logic/crc/src-test/createcrc.c combinational-logic/crc/src-common/crc_formats.c
createcrc_LDADD = include/common_util.o
createcrc_LINK = $(CCLD) -lm -o $@
cfd_SOURCES = unstructured-grids/cfd/cfd.cpp
bfs_SOURCES = graph-traversal/bfs/bfs.cpp
tdm_SOURCES = finite-state-machine/tdm/GpuTemporalDataMining.cpp
astar_SOURCES = branch-and-bound/astar/astar.c
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/n-body-methods/gem/Makefile.mk $(srcdir)/dynamic-programming/nw/Makefile.mk $(srcdir)/dynamic-programming/swat/Makefile.mk $(srcdir)/structured-grids/srad/Makefile.mk $(srcdir)/dense-linear-algebra/lud/Makefile.mk $(srcdir)/dense-linear-algebra/kmeans/Makefile.mk $(srcdir)/samplecl/Makefile.mk $(srcdir)/spectral-methods/fft/Makefile.mk $(srcdir)/sparse-linear-algebra/SPMV/Makefile.mk $(srcdir)/combinational-logic/crc/Makefile.mk $(srcdir)/unstructured-grids/cfd/Makefile.mk $(srcdir)/graph-traversal/bfs/Makefile.mk $(srcdir)/finite-state-machine/tdm/Makefile.mk $(srcdir)/branch-and-bound/astar/Makefile.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
opts/$(am__dirstamp):
	@$(MKDIR_P) opts
	@: > opts/$(am__dirstamp)
opts/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) opts/$(DEPDIR)
	@: > opts/$(DEPDIR)/$(am__dirstamp)
opts/opts.$(OBJEXT): opts/$(am__dirstamp) \
	opts/$(DEPDIR)/$(am__dirstamp)
libopts.a: $(libopts_a_OBJECTS) $(libopts_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libopts.a
	$(AM_V_AR)$(libopts_a_AR) libopts.a $(libopts_a_OBJECTS) $(libopts_a_LIBADD)
	$(AM_V_at)$(RANLIB) libopts.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
branch-and-bound/astar/$(am__dirstamp):
	@$(MKDIR_P) branch-and-bound/astar
	@: > branch-and-bound/astar/$(am__dirstamp)
branch-and-bound/astar/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) branch-and-bound/astar/$(DEPDIR)
	@: > branch-and-bound/astar/$(DEPDIR)/$(am__dirstamp)
branch-and-bound/astar/astar.$(OBJEXT):  \
	branch-and-bound/astar/$(am__dirstamp) \
	branch-and-bound/astar/$(DEPDIR)/$(am__dirstamp)
astar$(EXEEXT): $(astar_OBJECTS) $(astar_DEPENDENCIES) 
	@rm -f astar$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(astar_OBJECTS) $(astar_LDADD) $(LIBS)
graph-traversal/bfs/$(am__dirstamp):
	@$(MKDIR_P) graph-traversal/bfs
	@: > graph-traversal/bfs/$(am__dirstamp)
graph-traversal/bfs/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) graph-traversal/bfs/$(DEPDIR)
	@: > graph-traversal/bfs/$(DEPDIR)/$(am__dirstamp)
graph-traversal/bfs/bfs.$(OBJEXT):  \
	graph-traversal/bfs/$(am__dirstamp) \
	graph-traversal/bfs/$(DEPDIR)/$(am__dirstamp)
bfs$(EXEEXT): $(bfs_OBJECTS) $(bfs_DEPENDENCIES) 
	@rm -f bfs$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bfs_OBJECTS) $(bfs_LDADD) $(LIBS)
unstructured-grids/cfd/$(am__dirstamp):
	@$(MKDIR_P) unstructured-grids/cfd
	@: > unstructured-grids/cfd/$(am__dirstamp)
unstructured-grids/cfd/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) unstructured-grids/cfd/$(DEPDIR)
	@: > unstructured-grids/cfd/$(DEPDIR)/$(am__dirstamp)
unstructured-grids/cfd/cfd.$(OBJEXT):  \
	unstructured-grids/cfd/$(am__dirstamp) \
	unstructured-grids/cfd/$(DEPDIR)/$(am__dirstamp)
cfd$(EXEEXT): $(cfd_OBJECTS) $(cfd_DEPENDENCIES) 
	@rm -f cfd$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(cfd_OBJECTS) $(cfd_LDADD) $(LIBS)
spectral-methods/fft/src/opencl/fft/$(am__dirstamp):
	@$(MKDIR_P) spectral-methods/fft/src/opencl/fft
	@: > spectral-methods/fft/src/opencl/fft/$(am__dirstamp)
spectral-methods/fft/src/opencl/fft/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) spectral-methods/fft/src/opencl/fft/$(DEPDIR)
	@: > spectral-methods/fft/src/opencl/fft/$(DEPDIR)/$(am__dirstamp)
spectral-methods/fft/src/opencl/fft/clfft-fft.$(OBJEXT):  \
	spectral-methods/fft/src/opencl/fft/$(am__dirstamp) \
	spectral-methods/fft/src/opencl/fft/$(DEPDIR)/$(am__dirstamp)
spectral-methods/fft/src/opencl/fft/clfft-fftlib.$(OBJEXT):  \
	spectral-methods/fft/src/opencl/fft/$(am__dirstamp) \
	spectral-methods/fft/src/opencl/fft/$(DEPDIR)/$(am__dirstamp)
spectral-methods/fft/src/opencl/common/$(am__dirstamp):
	@$(MKDIR_P) spectral-methods/fft/src/opencl/common
	@: > spectral-methods/fft/src/opencl/common/$(am__dirstamp)
spectral-methods/fft/src/opencl/common/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) spectral-methods/fft/src/opencl/common/$(DEPDIR)
	@: > spectral-methods/fft/src/opencl/common/$(DEPDIR)/$(am__dirstamp)
spectral-methods/fft/src/opencl/common/clfft-main.$(OBJEXT):  \
	spectral-methods/fft/src/opencl/common/$(am__dirstamp) \
	spectral-methods/fft/src/opencl/common/$(DEPDIR)/$(am__dirstamp)
spectral-methods/fft/src/opencl/common/clfft-Event.$(OBJEXT):  \
	spectral-methods/fft/src/opencl/common/$(am__dirstamp) \
	spectral-methods/fft/src/opencl/common/$(DEPDIR)/$(am__dirstamp)
spectral-methods/fft/src/opencl/common/clfft-OpenCLDeviceInfo.$(OBJEXT):  \
	spectral-methods/fft/src/opencl/common/$(am__dirstamp) \
	spectral-methods/fft/src/opencl/common/$(DEPDIR)/$(am__dirstamp)
spectral-methods/fft/src/opencl/common/clfft-OpenCLNodePlatformContainer.$(OBJEXT):  \
	spectral-methods/fft/src/opencl/common/$(am__dirstamp) \
	spectral-methods/fft/src/opencl/common/$(DEPDIR)/$(am__dirstamp)
spectral-methods/fft/src/opencl/common/clfft-OpenCLPlatform.$(OBJEXT):  \
	spectral-methods/fft/src/opencl/common/$(am__dirstamp) \
	spectral-methods/fft/src/opencl/common/$(DEPDIR)/$(am__dirstamp)
spectral-methods/fft/src/common/$(am__dirstamp):
	@$(MKDIR_P) spectral-methods/fft/src/common
	@: > spectral-methods/fft/src/common/$(am__dirstamp)
spectral-methods/fft/src/common/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) spectral-methods/fft/src/common/$(DEPDIR)
	@: > spectral-methods/fft/src/common/$(DEPDIR)/$(am__dirstamp)
spectral-methods/fft/src/common/clfft-OptionParser.$(OBJEXT):  \
	spectral-methods/fft/src/common/$(am__dirstamp) \
	spectral-methods/fft/src/common/$(DEPDIR)/$(am__dirstamp)
spectral-methods/fft/src/common/clfft-ResultDatabase.$(OBJEXT):  \
	spectral-methods/fft/src/common/$(am__dirstamp) \
	spectral-methods/fft/src/common/$(DEPDIR)/$(am__dirstamp)
spectral-methods/fft/src/common/clfft-Timer.$(OBJEXT):  \
	spectral-methods/fft/src/common/$(am__dirstamp) \
	spectral-methods/fft/src/common/$(DEPDIR)/$(am__dirstamp)
spectral-methods/fft/src/common/clfft-Option.$(OBJEXT):  \
	spectral-methods/fft/src/common/$(am__dirstamp) \
	spectral-methods/fft/src/common/$(DEPDIR)/$(am__dirstamp)
spectral-methods/fft/src/common/clfft-InvalidArgValue.$(OBJEXT):  \
	spectral-methods/fft/src/common/$(am__dirstamp) \
	spectral-methods/fft/src/common/$(DEPDIR)/$(am__dirstamp)
clfft$(EXEEXT): $(clfft_OBJECTS) $(clfft_DEPENDENCIES) 
	@rm -f clfft$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(clfft_OBJECTS) $(clfft_LDADD) $(LIBS)
combinational-logic/crc/src/$(am__dirstamp):
	@$(MKDIR_P) combinational-logic/crc/src
	@: > combinational-logic/crc/src/$(am__dirstamp)
combinational-logic/crc/src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) combinational-logic/crc/src/$(DEPDIR)
	@: > combinational-logic/crc/src/$(DEPDIR)/$(am__dirstamp)
combinational-logic/crc/src/crc_algo.$(OBJEXT):  \
	combinational-logic/crc/src/$(am__dirstamp) \
	combinational-logic/crc/src/$(DEPDIR)/$(am__dirstamp)
combinational-logic/crc/src-common/$(am__dirstamp):
	@$(MKDIR_P) combinational-logic/crc/src-common
	@: > combinational-logic/crc/src-common/$(am__dirstamp)
combinational-logic/crc/src-common/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) combinational-logic/crc/src-common/$(DEPDIR)
	@: > combinational-logic/crc/src-common/$(DEPDIR)/$(am__dirstamp)
combinational-logic/crc/src-common/crc_formats.$(OBJEXT):  \
	combinational-logic/crc/src-common/$(am__dirstamp) \
	combinational-logic/crc/src-common/$(DEPDIR)/$(am__dirstamp)
crc$(EXEEXT): $(crc_OBJECTS) $(crc_DEPENDENCIES) 
	@rm -f crc$(EXEEXT)
	$(AM_V_CCLD)$(crc_LINK) $(crc_OBJECTS) $(crc_LDADD) $(LIBS)
combinational-logic/crc/src-test/$(am__dirstamp):
	@$(MKDIR_P) combinational-logic/crc/src-test
	@: > combinational-logic/crc/src-test/$(am__dirstamp)
combinational-logic/crc/src-test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) combinational-logic/crc/src-test/$(DEPDIR)
	@: > combinational-logic/crc/src-test/$(DEPDIR)/$(am__dirstamp)
combinational-logic/crc/src-test/createcrc.$(OBJEXT):  \
	combinational-logic/crc/src-test/$(am__dirstamp) \
	combinational-logic/crc/src-test/$(DEPDIR)/$(am__dirstamp)
createcrc$(EXEEXT): $(createcrc_OBJECTS) $(createcrc_DEPENDENCIES) 
	@rm -f createcrc$(EXEEXT)
	$(AM_V_GEN)$(createcrc_LINK) $(createcrc_OBJECTS) $(createcrc_LDADD) $(LIBS)
sparse-linear-algebra/SPMV/src-test/$(am__dirstamp):
	@$(MKDIR_P) sparse-linear-algebra/SPMV/src-test
	@: > sparse-linear-algebra/SPMV/src-test/$(am__dirstamp)
sparse-linear-algebra/SPMV/src-test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) sparse-linear-algebra/SPMV/src-test/$(DEPDIR)
	@: > sparse-linear-algebra/SPMV/src-test/$(DEPDIR)/$(am__dirstamp)
sparse-linear-algebra/SPMV/src-test/createcsr.$(OBJEXT):  \
	sparse-linear-algebra/SPMV/src-test/$(am__dirstamp) \
	sparse-linear-algebra/SPMV/src-test/$(DEPDIR)/$(am__dirstamp)
sparse-linear-algebra/SPMV/src-common/$(am__dirstamp):
	@$(MKDIR_P) sparse-linear-algebra/SPMV/src-common
	@: > sparse-linear-algebra/SPMV/src-common/$(am__dirstamp)
sparse-linear-algebra/SPMV/src-common/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) sparse-linear-algebra/SPMV/src-common/$(DEPDIR)
	@: > sparse-linear-algebra/SPMV/src-common/$(DEPDIR)/$(am__dirstamp)
sparse-linear-algebra/SPMV/src-common/sparse_formats.$(OBJEXT):  \
	sparse-linear-algebra/SPMV/src-common/$(am__dirstamp) \
	sparse-linear-algebra/SPMV/src-common/$(DEPDIR)/$(am__dirstamp)
sparse-linear-algebra/SPMV/src-common/ziggurat.$(OBJEXT):  \
	sparse-linear-algebra/SPMV/src-common/$(am__dirstamp) \
	sparse-linear-algebra/SPMV/src-common/$(DEPDIR)/$(am__dirstamp)
sparse-linear-algebra/SPMV/src-common/common.$(OBJEXT):  \
	sparse-linear-algebra/SPMV/src-common/$(am__dirstamp) \
	sparse-linear-algebra/SPMV/src-common/$(DEPDIR)/$(am__dirstamp)
createcsr$(EXEEXT): $(createcsr_OBJECTS) $(createcsr_DEPENDENCIES) 
	@rm -f createcsr$(EXEEXT)
	$(AM_V_GEN)$(createcsr_LINK) $(createcsr_OBJECTS) $(createcsr_LDADD) $(LIBS)
sparse-linear-algebra/SPMV/src/$(am__dirstamp):
	@$(MKDIR_P) sparse-linear-algebra/SPMV/src
	@: > sparse-linear-algebra/SPMV/src/$(am__dirstamp)
sparse-linear-algebra/SPMV/src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) sparse-linear-algebra/SPMV/src/$(DEPDIR)
	@: > sparse-linear-algebra/SPMV/src/$(DEPDIR)/$(am__dirstamp)
sparse-linear-algebra/SPMV/src/csr.$(OBJEXT):  \
	sparse-linear-algebra/SPMV/src/$(am__dirstamp) \
	sparse-linear-algebra/SPMV/src/$(DEPDIR)/$(am__dirstamp)
csr$(EXEEXT): $(csr_OBJECTS) $(csr_DEPENDENCIES) 
	@rm -f csr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(csr_OBJECTS) $(csr_LDADD) $(LIBS)
n-body-methods/gem/$(am__dirstamp):
	@$(MKDIR_P) n-body-methods/gem
	@: > n-body-methods/gem/$(am__dirstamp)
n-body-methods/gem/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) n-body-methods/gem/$(DEPDIR)
	@: > n-body-methods/gem/$(DEPDIR)/$(am__dirstamp)
n-body-methods/gem/gemnoui-dump_vertices.$(OBJEXT):  \
	n-body-methods/gem/$(am__dirstamp) \
	n-body-methods/gem/$(DEPDIR)/$(am__dirstamp)
n-body-methods/gem/gemnoui-floating_centers.$(OBJEXT):  \
	n-body-methods/gem/$(am__dirstamp) \
	n-body-methods/gem/$(DEPDIR)/$(am__dirstamp)
n-body-methods/gem/gemnoui-radix_sort.$(OBJEXT):  \
	n-body-methods/gem/$(am__dirstamp) \
	n-body-methods/gem/$(DEPDIR)/$(am__dirstamp)
n-body-methods/gem/gemnoui-read_pqr.$(OBJEXT):  \
	n-body-methods/gem/$(am__dirstamp) \
	n-body-methods/gem/$(DEPDIR)/$(am__dirstamp)
n-body-methods/gem/gemnoui-vector_math.$(OBJEXT):  \
	n-body-methods/gem/$(am__dirstamp) \
	n-body-methods/gem/$(DEPDIR)/$(am__dirstamp)
n-body-methods/gem/gemnoui-write_grid.$(OBJEXT):  \
	n-body-methods/gem/$(am__dirstamp) \
	n-body-methods/gem/$(DEPDIR)/$(am__dirstamp)
n-body-methods/gem/gemnoui-extrapolate_bonds.$(OBJEXT):  \
	n-body-methods/gem/$(am__dirstamp) \
	n-body-methods/gem/$(DEPDIR)/$(am__dirstamp)
n-body-methods/gem/gemnoui-populate_stats.$(OBJEXT):  \
	n-body-methods/gem/$(am__dirstamp) \
	n-body-methods/gem/$(DEPDIR)/$(am__dirstamp)
n-body-methods/gem/gemnoui-read_msms.$(OBJEXT):  \
	n-body-methods/gem/$(am__dirstamp) \
	n-body-methods/gem/$(DEPDIR)/$(am__dirstamp)
n-body-methods/gem/gemnoui-run_msms.$(OBJEXT):  \
	n-body-methods/gem/$(am__dirstamp) \
	n-body-methods/gem/$(DEPDIR)/$(am__dirstamp)
n-body-methods/gem/gemnoui-write_avs.$(OBJEXT):  \
	n-body-methods/gem/$(am__dirstamp) \
	n-body-methods/gem/$(DEPDIR)/$(am__dirstamp)
n-body-methods/gem/gemnoui-write_xyzr.$(OBJEXT):  \
	n-body-methods/gem/$(am__dirstamp) \
	n-body-methods/gem/$(DEPDIR)/$(am__dirstamp)
n-body-methods/gem/gemnoui-calculate_potential.$(OBJEXT):  \
	n-body-methods/gem/$(am__dirstamp) \
	n-body-methods/gem/$(DEPDIR)/$(am__dirstamp)
n-body-methods/gem/gemnoui-check_cmdline.$(OBJEXT):  \
	n-body-methods/gem/$(am__dirstamp) \
	n-body-methods/gem/$(DEPDIR)/$(am__dirstamp)
n-body-methods/gem/gemnoui-estimate_a.$(OBJEXT):  \
	n-body-methods/gem/$(am__dirstamp) \
	n-body-methods/gem/$(DEPDIR)/$(am__dirstamp)
n-body-methods/gem/gemnoui-gem_no_ui.$(OBJEXT):  \
	n-body-methods/gem/$(am__dirstamp) \
	n-body-methods/gem/$(DEPDIR)/$(am__dirstamp)
n-body-methods/gem/gemnoui-open_pqr_run_msms.$(OBJEXT):  \
	n-body-methods/gem/$(am__dirstamp) \
	n-body-methods/gem/$(DEPDIR)/$(am__dirstamp)
gemnoui$(EXEEXT): $(gemnoui_OBJECTS) $(gemnoui_DEPENDENCIES) 
	@rm -f gemnoui$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(gemnoui_OBJECTS) $(gemnoui_LDADD) $(LIBS)
dense-linear-algebra/kmeans/$(am__dirstamp):
	@$(MKDIR_P) dense-linear-algebra/kmeans
	@: > dense-linear-algebra/kmeans/$(am__dirstamp)
dense-linear-algebra/kmeans/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) dense-linear-algebra/kmeans/$(DEPDIR)
	@: > dense-linear-algebra/kmeans/$(DEPDIR)/$(am__dirstamp)
dense-linear-algebra/kmeans/kmeans.$(OBJEXT):  \
	dense-linear-algebra/kmeans/$(am__dirstamp) \
	dense-linear-algebra/kmeans/$(DEPDIR)/$(am__dirstamp)
dense-linear-algebra/kmeans/cluster.$(OBJEXT):  \
	dense-linear-algebra/kmeans/$(am__dirstamp) \
	dense-linear-algebra/kmeans/$(DEPDIR)/$(am__dirstamp)
dense-linear-algebra/kmeans/getopt.$(OBJEXT):  \
	dense-linear-algebra/kmeans/$(am__dirstamp) \
	dense-linear-algebra/kmeans/$(DEPDIR)/$(am__dirstamp)
dense-linear-algebra/kmeans/kmeans_clustering.$(OBJEXT):  \
	dense-linear-algebra/kmeans/$(am__dirstamp) \
	dense-linear-algebra/kmeans/$(DEPDIR)/$(am__dirstamp)
dense-linear-algebra/kmeans/kmeans_opencl.$(OBJEXT):  \
	dense-linear-algebra/kmeans/$(am__dirstamp) \
	dense-linear-algebra/kmeans/$(DEPDIR)/$(am__dirstamp)
dense-linear-algebra/kmeans/rmse.$(OBJEXT):  \
	dense-linear-algebra/kmeans/$(am__dirstamp) \
	dense-linear-algebra/kmeans/$(DEPDIR)/$(am__dirstamp)
kmeans$(EXEEXT): $(kmeans_OBJECTS) $(kmeans_DEPENDENCIES) 
	@rm -f kmeans$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(kmeans_OBJECTS) $(kmeans_LDADD) $(LIBS)
dense-linear-algebra/lud/$(am__dirstamp):
	@$(MKDIR_P) dense-linear-algebra/lud
	@: > dense-linear-algebra/lud/$(am__dirstamp)
dense-linear-algebra/lud/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) dense-linear-algebra/lud/$(DEPDIR)
	@: > dense-linear-algebra/lud/$(DEPDIR)/$(am__dirstamp)
dense-linear-algebra/lud/lud.$(OBJEXT):  \
	dense-linear-algebra/lud/$(am__dirstamp) \
	dense-linear-algebra/lud/$(DEPDIR)/$(am__dirstamp)
dense-linear-algebra/lud/common.$(OBJEXT):  \
	dense-linear-algebra/lud/$(am__dirstamp) \
	dense-linear-algebra/lud/$(DEPDIR)/$(am__dirstamp)
lud$(EXEEXT): $(lud_OBJECTS) $(lud_DEPENDENCIES) 
	@rm -f lud$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lud_OBJECTS) $(lud_LDADD) $(LIBS)
dynamic-programming/nw/$(am__dirstamp):
	@$(MKDIR_P) dynamic-programming/nw
	@: > dynamic-programming/nw/$(am__dirstamp)
dynamic-programming/nw/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) dynamic-programming/nw/$(DEPDIR)
	@: > dynamic-programming/nw/$(DEPDIR)/$(am__dirstamp)
dynamic-programming/nw/needle.$(OBJEXT):  \
	dynamic-programming/nw/$(am__dirstamp) \
	dynamic-programming/nw/$(DEPDIR)/$(am__dirstamp)
needle$(EXEEXT): $(needle_OBJECTS) $(needle_DEPENDENCIES) 
	@rm -f needle$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(needle_OBJECTS) $(needle_LDADD) $(LIBS)
include/$(am__dirstamp):
	@$(MKDIR_P) include
	@: > include/$(am__dirstamp)
include/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) include/$(DEPDIR)
	@: > include/$(DEPDIR)/$(am__dirstamp)
include/common_ocl.$(OBJEXT): include/$(am__dirstamp) \
	include/$(DEPDIR)/$(am__dirstamp)
include/rdtsc.$(OBJEXT): include/$(am__dirstamp) \
	include/$(DEPDIR)/$(am__dirstamp)
include/common_util.$(OBJEXT): include/$(am__dirstamp) \
	include/$(DEPDIR)/$(am__dirstamp)
ocd$(EXEEXT): $(ocd_OBJECTS) $(ocd_DEPENDENCIES) 
	@rm -f ocd$(EXEEXT)
	$(AM_V_GEN)$(ocd_LINK) $(ocd_OBJECTS) $(ocd_LDADD) $(LIBS)
samplecl/$(am__dirstamp):
	@$(MKDIR_P) samplecl
	@: > samplecl/$(am__dirstamp)
samplecl/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) samplecl/$(DEPDIR)
	@: > samplecl/$(DEPDIR)/$(am__dirstamp)
samplecl/samplecl.$(OBJEXT): samplecl/$(am__dirstamp) \
	samplecl/$(DEPDIR)/$(am__dirstamp)
scl$(EXEEXT): $(scl_OBJECTS) $(scl_DEPENDENCIES) 
	@rm -f scl$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scl_OBJECTS) $(scl_LDADD) $(LIBS)
structured-grids/srad/$(am__dirstamp):
	@$(MKDIR_P) structured-grids/srad
	@: > structured-grids/srad/$(am__dirstamp)
structured-grids/srad/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) structured-grids/srad/$(DEPDIR)
	@: > structured-grids/srad/$(DEPDIR)/$(am__dirstamp)
structured-grids/srad/srad.$(OBJEXT):  \
	structured-grids/srad/$(am__dirstamp) \
	structured-grids/srad/$(DEPDIR)/$(am__dirstamp)
srad$(EXEEXT): $(srad_OBJECTS) $(srad_DEPENDENCIES) 
	@rm -f srad$(EXEEXT)
	$(AM_V_CCLD)$(srad_LINK) $(srad_OBJECTS) $(srad_LDADD) $(LIBS)
dynamic-programming/swat/$(am__dirstamp):
	@$(MKDIR_P) dynamic-programming/swat
	@: > dynamic-programming/swat/$(am__dirstamp)
dynamic-programming/swat/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) dynamic-programming/swat/$(DEPDIR)
	@: > dynamic-programming/swat/$(DEPDIR)/$(am__dirstamp)
dynamic-programming/swat/alignments.$(OBJEXT):  \
	dynamic-programming/swat/$(am__dirstamp) \
	dynamic-programming/swat/$(DEPDIR)/$(am__dirstamp)
dynamic-programming/swat/prints.$(OBJEXT):  \
	dynamic-programming/swat/$(am__dirstamp) \
	dynamic-programming/swat/$(DEPDIR)/$(am__dirstamp)
dynamic-programming/swat/sequences.$(OBJEXT):  \
	dynamic-programming/swat/$(am__dirstamp) \
	dynamic-programming/swat/$(DEPDIR)/$(am__dirstamp)
dynamic-programming/swat/swat.$(OBJEXT):  \
	dynamic-programming/swat/$(am__dirstamp) \
	dynamic-programming/swat/$(DEPDIR)/$(am__dirstamp)
dynamic-programming/swat/param.$(OBJEXT):  \
	dynamic-programming/swat/$(am__dirstamp) \
	dynamic-programming/swat/$(DEPDIR)/$(am__dirstamp)
dynamic-programming/swat/timeRec.$(OBJEXT):  \
	dynamic-programming/swat/$(am__dirstamp) \
	dynamic-programming/swat/$(DEPDIR)/$(am__dirstamp)
swat$(EXEEXT): $(swat_OBJECTS) $(swat_DEPENDENCIES) 
	@rm -f swat$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(swat_OBJECTS) $(swat_LDADD) $(LIBS)
finite-state-machine/tdm/$(am__dirstamp):
	@$(MKDIR_P) finite-state-machine/tdm
	@: > finite-state-machine/tdm/$(am__dirstamp)
finite-state-machine/tdm/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) finite-state-machine/tdm/$(DEPDIR)
	@: > finite-state-machine/tdm/$(DEPDIR)/$(am__dirstamp)
finite-state-machine/tdm/GpuTemporalDataMining.$(OBJEXT):  \
	finite-state-machine/tdm/$(am__dirstamp) \
	finite-state-machine/tdm/$(DEPDIR)/$(am__dirstamp)
tdm$(EXEEXT): $(tdm_OBJECTS) $(tdm_DEPENDENCIES) 
	@rm -f tdm$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(tdm_OBJECTS) $(tdm_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f branch-and-bound/astar/astar.$(OBJEXT)
	-rm -f combinational-logic/crc/src-common/crc_formats.$(OBJEXT)
	-rm -f combinational-logic/crc/src-test/createcrc.$(OBJEXT)
	-rm -f combinational-logic/crc/src/crc_algo.$(OBJEXT)
	-rm -f dense-linear-algebra/kmeans/cluster.$(OBJEXT)
	-rm -f dense-linear-algebra/kmeans/getopt.$(OBJEXT)
	-rm -f dense-linear-algebra/kmeans/kmeans.$(OBJEXT)
	-rm -f dense-linear-algebra/kmeans/kmeans_clustering.$(OBJEXT)
	-rm -f dense-linear-algebra/kmeans/kmeans_opencl.$(OBJEXT)
	-rm -f dense-linear-algebra/kmeans/rmse.$(OBJEXT)
	-rm -f dense-linear-algebra/lud/common.$(OBJEXT)
	-rm -f dense-linear-algebra/lud/lud.$(OBJEXT)
	-rm -f dynamic-programming/nw/needle.$(OBJEXT)
	-rm -f dynamic-programming/swat/alignments.$(OBJEXT)
	-rm -f dynamic-programming/swat/param.$(OBJEXT)
	-rm -f dynamic-programming/swat/prints.$(OBJEXT)
	-rm -f dynamic-programming/swat/sequences.$(OBJEXT)
	-rm -f dynamic-programming/swat/swat.$(OBJEXT)
	-rm -f dynamic-programming/swat/timeRec.$(OBJEXT)
	-rm -f finite-state-machine/tdm/GpuTemporalDataMining.$(OBJEXT)
	-rm -f graph-traversal/bfs/bfs.$(OBJEXT)
	-rm -f include/common_ocl.$(OBJEXT)
	-rm -f include/common_util.$(OBJEXT)
	-rm -f include/rdtsc.$(OBJEXT)
	-rm -f n-body-methods/gem/gemnoui-calculate_potential.$(OBJEXT)
	-rm -f n-body-methods/gem/gemnoui-check_cmdline.$(OBJEXT)
	-rm -f n-body-methods/gem/gemnoui-dump_vertices.$(OBJEXT)
	-rm -f n-body-methods/gem/gemnoui-estimate_a.$(OBJEXT)
	-rm -f n-body-methods/gem/gemnoui-extrapolate_bonds.$(OBJEXT)
	-rm -f n-body-methods/gem/gemnoui-floating_centers.$(OBJEXT)
	-rm -f n-body-methods/gem/gemnoui-gem_no_ui.$(OBJEXT)
	-rm -f n-body-methods/gem/gemnoui-open_pqr_run_msms.$(OBJEXT)
	-rm -f n-body-methods/gem/gemnoui-populate_stats.$(OBJEXT)
	-rm -f n-body-methods/gem/gemnoui-radix_sort.$(OBJEXT)
	-rm -f n-body-methods/gem/gemnoui-read_msms.$(OBJEXT)
	-rm -f n-body-methods/gem/gemnoui-read_pqr.$(OBJEXT)
	-rm -f n-body-methods/gem/gemnoui-run_msms.$(OBJEXT)
	-rm -f n-body-methods/gem/gemnoui-vector_math.$(OBJEXT)
	-rm -f n-body-methods/gem/gemnoui-write_avs.$(OBJEXT)
	-rm -f n-body-methods/gem/gemnoui-write_grid.$(OBJEXT)
	-rm -f n-body-methods/gem/gemnoui-write_xyzr.$(OBJEXT)
	-rm -f opts/opts.$(OBJEXT)
	-rm -f samplecl/samplecl.$(OBJEXT)
	-rm -f sparse-linear-algebra/SPMV/src-common/common.$(OBJEXT)
	-rm -f sparse-linear-algebra/SPMV/src-common/sparse_formats.$(OBJEXT)
	-rm -f sparse-linear-algebra/SPMV/src-common/ziggurat.$(OBJEXT)
	-rm -f sparse-linear-algebra/SPMV/src-test/createcsr.$(OBJEXT)
	-rm -f sparse-linear-algebra/SPMV/src/csr.$(OBJEXT)
	-rm -f spectral-methods/fft/src/common/clfft-InvalidArgValue.$(OBJEXT)
	-rm -f spectral-methods/fft/src/common/clfft-Option.$(OBJEXT)
	-rm -f spectral-methods/fft/src/common/clfft-OptionParser.$(OBJEXT)
	-rm -f spectral-methods/fft/src/common/clfft-ResultDatabase.$(OBJEXT)
	-rm -f spectral-methods/fft/src/common/clfft-Timer.$(OBJEXT)
	-rm -f spectral-methods/fft/src/opencl/common/clfft-Event.$(OBJEXT)
	-rm -f spectral-methods/fft/src/opencl/common/clfft-OpenCLDeviceInfo.$(OBJEXT)
	-rm -f spectral-methods/fft/src/opencl/common/clfft-OpenCLNodePlatformContainer.$(OBJEXT)
	-rm -f spectral-methods/fft/src/opencl/common/clfft-OpenCLPlatform.$(OBJEXT)
	-rm -f spectral-methods/fft/src/opencl/common/clfft-main.$(OBJEXT)
	-rm -f spectral-methods/fft/src/opencl/fft/clfft-fft.$(OBJEXT)
	-rm -f spectral-methods/fft/src/opencl/fft/clfft-fftlib.$(OBJEXT)
	-rm -f structured-grids/srad/srad.$(OBJEXT)
	-rm -f unstructured-grids/cfd/cfd.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include branch-and-bound/astar/$(DEPDIR)/astar.Po
include combinational-logic/crc/src-common/$(DEPDIR)/crc_formats.Po
include combinational-logic/crc/src-test/$(DEPDIR)/createcrc.Po
include combinational-logic/crc/src/$(DEPDIR)/crc_algo.Po
include dense-linear-algebra/kmeans/$(DEPDIR)/cluster.Po
include dense-linear-algebra/kmeans/$(DEPDIR)/getopt.Po
include dense-linear-algebra/kmeans/$(DEPDIR)/kmeans.Po
include dense-linear-algebra/kmeans/$(DEPDIR)/kmeans_clustering.Po
include dense-linear-algebra/kmeans/$(DEPDIR)/kmeans_opencl.Po
include dense-linear-algebra/kmeans/$(DEPDIR)/rmse.Po
include dense-linear-algebra/lud/$(DEPDIR)/common.Po
include dense-linear-algebra/lud/$(DEPDIR)/lud.Po
include dynamic-programming/nw/$(DEPDIR)/needle.Po
include dynamic-programming/swat/$(DEPDIR)/alignments.Po
include dynamic-programming/swat/$(DEPDIR)/param.Po
include dynamic-programming/swat/$(DEPDIR)/prints.Po
include dynamic-programming/swat/$(DEPDIR)/sequences.Po
include dynamic-programming/swat/$(DEPDIR)/swat.Po
include dynamic-programming/swat/$(DEPDIR)/timeRec.Po
include finite-state-machine/tdm/$(DEPDIR)/GpuTemporalDataMining.Po
include graph-traversal/bfs/$(DEPDIR)/bfs.Po
include include/$(DEPDIR)/common_ocl.Po
include include/$(DEPDIR)/common_util.Po
include include/$(DEPDIR)/rdtsc.Po
include n-body-methods/gem/$(DEPDIR)/gemnoui-calculate_potential.Po
include n-body-methods/gem/$(DEPDIR)/gemnoui-check_cmdline.Po
include n-body-methods/gem/$(DEPDIR)/gemnoui-dump_vertices.Po
include n-body-methods/gem/$(DEPDIR)/gemnoui-estimate_a.Po
include n-body-methods/gem/$(DEPDIR)/gemnoui-extrapolate_bonds.Po
include n-body-methods/gem/$(DEPDIR)/gemnoui-floating_centers.Po
include n-body-methods/gem/$(DEPDIR)/gemnoui-gem_no_ui.Po
include n-body-methods/gem/$(DEPDIR)/gemnoui-open_pqr_run_msms.Po
include n-body-methods/gem/$(DEPDIR)/gemnoui-populate_stats.Po
include n-body-methods/gem/$(DEPDIR)/gemnoui-radix_sort.Po
include n-body-methods/gem/$(DEPDIR)/gemnoui-read_msms.Po
include n-body-methods/gem/$(DEPDIR)/gemnoui-read_pqr.Po
include n-body-methods/gem/$(DEPDIR)/gemnoui-run_msms.Po
include n-body-methods/gem/$(DEPDIR)/gemnoui-vector_math.Po
include n-body-methods/gem/$(DEPDIR)/gemnoui-write_avs.Po
include n-body-methods/gem/$(DEPDIR)/gemnoui-write_grid.Po
include n-body-methods/gem/$(DEPDIR)/gemnoui-write_xyzr.Po
include opts/$(DEPDIR)/opts.Po
include samplecl/$(DEPDIR)/samplecl.Po
include sparse-linear-algebra/SPMV/src-common/$(DEPDIR)/common.Po
include sparse-linear-algebra/SPMV/src-common/$(DEPDIR)/sparse_formats.Po
include sparse-linear-algebra/SPMV/src-common/$(DEPDIR)/ziggurat.Po
include sparse-linear-algebra/SPMV/src-test/$(DEPDIR)/createcsr.Po
include sparse-linear-algebra/SPMV/src/$(DEPDIR)/csr.Po
include spectral-methods/fft/src/common/$(DEPDIR)/clfft-InvalidArgValue.Po
include spectral-methods/fft/src/common/$(DEPDIR)/clfft-Option.Po
include spectral-methods/fft/src/common/$(DEPDIR)/clfft-OptionParser.Po
include spectral-methods/fft/src/common/$(DEPDIR)/clfft-ResultDatabase.Po
include spectral-methods/fft/src/common/$(DEPDIR)/clfft-Timer.Po
include spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-Event.Po
include spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-OpenCLDeviceInfo.Po
include spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-OpenCLNodePlatformContainer.Po
include spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-OpenCLPlatform.Po
include spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-main.Po
include spectral-methods/fft/src/opencl/fft/$(DEPDIR)/clfft-fft.Po
include spectral-methods/fft/src/opencl/fft/$(DEPDIR)/clfft-fftlib.Po
include structured-grids/srad/$(DEPDIR)/srad.Po
include unstructured-grids/cfd/$(DEPDIR)/cfd.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

n-body-methods/gem/gemnoui-dump_vertices.o: n-body-methods/gem/dump_vertices.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT n-body-methods/gem/gemnoui-dump_vertices.o -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-dump_vertices.Tpo -c -o n-body-methods/gem/gemnoui-dump_vertices.o `test -f 'n-body-methods/gem/dump_vertices.c' || echo '$(srcdir)/'`n-body-methods/gem/dump_vertices.c
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-dump_vertices.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-dump_vertices.Po
#	$(AM_V_CC) \
#	source='n-body-methods/gem/dump_vertices.c' object='n-body-methods/gem/gemnoui-dump_vertices.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o n-body-methods/gem/gemnoui-dump_vertices.o `test -f 'n-body-methods/gem/dump_vertices.c' || echo '$(srcdir)/'`n-body-methods/gem/dump_vertices.c

n-body-methods/gem/gemnoui-dump_vertices.obj: n-body-methods/gem/dump_vertices.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT n-body-methods/gem/gemnoui-dump_vertices.obj -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-dump_vertices.Tpo -c -o n-body-methods/gem/gemnoui-dump_vertices.obj `if test -f 'n-body-methods/gem/dump_vertices.c'; then $(CYGPATH_W) 'n-body-methods/gem/dump_vertices.c'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/dump_vertices.c'; fi`
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-dump_vertices.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-dump_vertices.Po
#	$(AM_V_CC) \
#	source='n-body-methods/gem/dump_vertices.c' object='n-body-methods/gem/gemnoui-dump_vertices.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o n-body-methods/gem/gemnoui-dump_vertices.obj `if test -f 'n-body-methods/gem/dump_vertices.c'; then $(CYGPATH_W) 'n-body-methods/gem/dump_vertices.c'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/dump_vertices.c'; fi`

n-body-methods/gem/gemnoui-floating_centers.o: n-body-methods/gem/floating_centers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT n-body-methods/gem/gemnoui-floating_centers.o -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-floating_centers.Tpo -c -o n-body-methods/gem/gemnoui-floating_centers.o `test -f 'n-body-methods/gem/floating_centers.c' || echo '$(srcdir)/'`n-body-methods/gem/floating_centers.c
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-floating_centers.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-floating_centers.Po
#	$(AM_V_CC) \
#	source='n-body-methods/gem/floating_centers.c' object='n-body-methods/gem/gemnoui-floating_centers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o n-body-methods/gem/gemnoui-floating_centers.o `test -f 'n-body-methods/gem/floating_centers.c' || echo '$(srcdir)/'`n-body-methods/gem/floating_centers.c

n-body-methods/gem/gemnoui-floating_centers.obj: n-body-methods/gem/floating_centers.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT n-body-methods/gem/gemnoui-floating_centers.obj -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-floating_centers.Tpo -c -o n-body-methods/gem/gemnoui-floating_centers.obj `if test -f 'n-body-methods/gem/floating_centers.c'; then $(CYGPATH_W) 'n-body-methods/gem/floating_centers.c'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/floating_centers.c'; fi`
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-floating_centers.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-floating_centers.Po
#	$(AM_V_CC) \
#	source='n-body-methods/gem/floating_centers.c' object='n-body-methods/gem/gemnoui-floating_centers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o n-body-methods/gem/gemnoui-floating_centers.obj `if test -f 'n-body-methods/gem/floating_centers.c'; then $(CYGPATH_W) 'n-body-methods/gem/floating_centers.c'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/floating_centers.c'; fi`

n-body-methods/gem/gemnoui-radix_sort.o: n-body-methods/gem/radix_sort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT n-body-methods/gem/gemnoui-radix_sort.o -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-radix_sort.Tpo -c -o n-body-methods/gem/gemnoui-radix_sort.o `test -f 'n-body-methods/gem/radix_sort.c' || echo '$(srcdir)/'`n-body-methods/gem/radix_sort.c
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-radix_sort.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-radix_sort.Po
#	$(AM_V_CC) \
#	source='n-body-methods/gem/radix_sort.c' object='n-body-methods/gem/gemnoui-radix_sort.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o n-body-methods/gem/gemnoui-radix_sort.o `test -f 'n-body-methods/gem/radix_sort.c' || echo '$(srcdir)/'`n-body-methods/gem/radix_sort.c

n-body-methods/gem/gemnoui-radix_sort.obj: n-body-methods/gem/radix_sort.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT n-body-methods/gem/gemnoui-radix_sort.obj -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-radix_sort.Tpo -c -o n-body-methods/gem/gemnoui-radix_sort.obj `if test -f 'n-body-methods/gem/radix_sort.c'; then $(CYGPATH_W) 'n-body-methods/gem/radix_sort.c'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/radix_sort.c'; fi`
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-radix_sort.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-radix_sort.Po
#	$(AM_V_CC) \
#	source='n-body-methods/gem/radix_sort.c' object='n-body-methods/gem/gemnoui-radix_sort.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o n-body-methods/gem/gemnoui-radix_sort.obj `if test -f 'n-body-methods/gem/radix_sort.c'; then $(CYGPATH_W) 'n-body-methods/gem/radix_sort.c'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/radix_sort.c'; fi`

n-body-methods/gem/gemnoui-read_pqr.o: n-body-methods/gem/read_pqr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT n-body-methods/gem/gemnoui-read_pqr.o -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-read_pqr.Tpo -c -o n-body-methods/gem/gemnoui-read_pqr.o `test -f 'n-body-methods/gem/read_pqr.c' || echo '$(srcdir)/'`n-body-methods/gem/read_pqr.c
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-read_pqr.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-read_pqr.Po
#	$(AM_V_CC) \
#	source='n-body-methods/gem/read_pqr.c' object='n-body-methods/gem/gemnoui-read_pqr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o n-body-methods/gem/gemnoui-read_pqr.o `test -f 'n-body-methods/gem/read_pqr.c' || echo '$(srcdir)/'`n-body-methods/gem/read_pqr.c

n-body-methods/gem/gemnoui-read_pqr.obj: n-body-methods/gem/read_pqr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT n-body-methods/gem/gemnoui-read_pqr.obj -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-read_pqr.Tpo -c -o n-body-methods/gem/gemnoui-read_pqr.obj `if test -f 'n-body-methods/gem/read_pqr.c'; then $(CYGPATH_W) 'n-body-methods/gem/read_pqr.c'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/read_pqr.c'; fi`
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-read_pqr.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-read_pqr.Po
#	$(AM_V_CC) \
#	source='n-body-methods/gem/read_pqr.c' object='n-body-methods/gem/gemnoui-read_pqr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o n-body-methods/gem/gemnoui-read_pqr.obj `if test -f 'n-body-methods/gem/read_pqr.c'; then $(CYGPATH_W) 'n-body-methods/gem/read_pqr.c'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/read_pqr.c'; fi`

n-body-methods/gem/gemnoui-vector_math.o: n-body-methods/gem/vector_math.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT n-body-methods/gem/gemnoui-vector_math.o -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-vector_math.Tpo -c -o n-body-methods/gem/gemnoui-vector_math.o `test -f 'n-body-methods/gem/vector_math.c' || echo '$(srcdir)/'`n-body-methods/gem/vector_math.c
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-vector_math.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-vector_math.Po
#	$(AM_V_CC) \
#	source='n-body-methods/gem/vector_math.c' object='n-body-methods/gem/gemnoui-vector_math.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o n-body-methods/gem/gemnoui-vector_math.o `test -f 'n-body-methods/gem/vector_math.c' || echo '$(srcdir)/'`n-body-methods/gem/vector_math.c

n-body-methods/gem/gemnoui-vector_math.obj: n-body-methods/gem/vector_math.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT n-body-methods/gem/gemnoui-vector_math.obj -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-vector_math.Tpo -c -o n-body-methods/gem/gemnoui-vector_math.obj `if test -f 'n-body-methods/gem/vector_math.c'; then $(CYGPATH_W) 'n-body-methods/gem/vector_math.c'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/vector_math.c'; fi`
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-vector_math.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-vector_math.Po
#	$(AM_V_CC) \
#	source='n-body-methods/gem/vector_math.c' object='n-body-methods/gem/gemnoui-vector_math.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o n-body-methods/gem/gemnoui-vector_math.obj `if test -f 'n-body-methods/gem/vector_math.c'; then $(CYGPATH_W) 'n-body-methods/gem/vector_math.c'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/vector_math.c'; fi`

n-body-methods/gem/gemnoui-write_grid.o: n-body-methods/gem/write_grid.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT n-body-methods/gem/gemnoui-write_grid.o -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-write_grid.Tpo -c -o n-body-methods/gem/gemnoui-write_grid.o `test -f 'n-body-methods/gem/write_grid.c' || echo '$(srcdir)/'`n-body-methods/gem/write_grid.c
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-write_grid.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-write_grid.Po
#	$(AM_V_CC) \
#	source='n-body-methods/gem/write_grid.c' object='n-body-methods/gem/gemnoui-write_grid.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o n-body-methods/gem/gemnoui-write_grid.o `test -f 'n-body-methods/gem/write_grid.c' || echo '$(srcdir)/'`n-body-methods/gem/write_grid.c

n-body-methods/gem/gemnoui-write_grid.obj: n-body-methods/gem/write_grid.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT n-body-methods/gem/gemnoui-write_grid.obj -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-write_grid.Tpo -c -o n-body-methods/gem/gemnoui-write_grid.obj `if test -f 'n-body-methods/gem/write_grid.c'; then $(CYGPATH_W) 'n-body-methods/gem/write_grid.c'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/write_grid.c'; fi`
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-write_grid.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-write_grid.Po
#	$(AM_V_CC) \
#	source='n-body-methods/gem/write_grid.c' object='n-body-methods/gem/gemnoui-write_grid.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o n-body-methods/gem/gemnoui-write_grid.obj `if test -f 'n-body-methods/gem/write_grid.c'; then $(CYGPATH_W) 'n-body-methods/gem/write_grid.c'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/write_grid.c'; fi`

n-body-methods/gem/gemnoui-extrapolate_bonds.o: n-body-methods/gem/extrapolate_bonds.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT n-body-methods/gem/gemnoui-extrapolate_bonds.o -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-extrapolate_bonds.Tpo -c -o n-body-methods/gem/gemnoui-extrapolate_bonds.o `test -f 'n-body-methods/gem/extrapolate_bonds.c' || echo '$(srcdir)/'`n-body-methods/gem/extrapolate_bonds.c
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-extrapolate_bonds.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-extrapolate_bonds.Po
#	$(AM_V_CC) \
#	source='n-body-methods/gem/extrapolate_bonds.c' object='n-body-methods/gem/gemnoui-extrapolate_bonds.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o n-body-methods/gem/gemnoui-extrapolate_bonds.o `test -f 'n-body-methods/gem/extrapolate_bonds.c' || echo '$(srcdir)/'`n-body-methods/gem/extrapolate_bonds.c

n-body-methods/gem/gemnoui-extrapolate_bonds.obj: n-body-methods/gem/extrapolate_bonds.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT n-body-methods/gem/gemnoui-extrapolate_bonds.obj -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-extrapolate_bonds.Tpo -c -o n-body-methods/gem/gemnoui-extrapolate_bonds.obj `if test -f 'n-body-methods/gem/extrapolate_bonds.c'; then $(CYGPATH_W) 'n-body-methods/gem/extrapolate_bonds.c'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/extrapolate_bonds.c'; fi`
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-extrapolate_bonds.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-extrapolate_bonds.Po
#	$(AM_V_CC) \
#	source='n-body-methods/gem/extrapolate_bonds.c' object='n-body-methods/gem/gemnoui-extrapolate_bonds.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o n-body-methods/gem/gemnoui-extrapolate_bonds.obj `if test -f 'n-body-methods/gem/extrapolate_bonds.c'; then $(CYGPATH_W) 'n-body-methods/gem/extrapolate_bonds.c'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/extrapolate_bonds.c'; fi`

n-body-methods/gem/gemnoui-populate_stats.o: n-body-methods/gem/populate_stats.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT n-body-methods/gem/gemnoui-populate_stats.o -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-populate_stats.Tpo -c -o n-body-methods/gem/gemnoui-populate_stats.o `test -f 'n-body-methods/gem/populate_stats.c' || echo '$(srcdir)/'`n-body-methods/gem/populate_stats.c
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-populate_stats.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-populate_stats.Po
#	$(AM_V_CC) \
#	source='n-body-methods/gem/populate_stats.c' object='n-body-methods/gem/gemnoui-populate_stats.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o n-body-methods/gem/gemnoui-populate_stats.o `test -f 'n-body-methods/gem/populate_stats.c' || echo '$(srcdir)/'`n-body-methods/gem/populate_stats.c

n-body-methods/gem/gemnoui-populate_stats.obj: n-body-methods/gem/populate_stats.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT n-body-methods/gem/gemnoui-populate_stats.obj -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-populate_stats.Tpo -c -o n-body-methods/gem/gemnoui-populate_stats.obj `if test -f 'n-body-methods/gem/populate_stats.c'; then $(CYGPATH_W) 'n-body-methods/gem/populate_stats.c'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/populate_stats.c'; fi`
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-populate_stats.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-populate_stats.Po
#	$(AM_V_CC) \
#	source='n-body-methods/gem/populate_stats.c' object='n-body-methods/gem/gemnoui-populate_stats.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o n-body-methods/gem/gemnoui-populate_stats.obj `if test -f 'n-body-methods/gem/populate_stats.c'; then $(CYGPATH_W) 'n-body-methods/gem/populate_stats.c'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/populate_stats.c'; fi`

n-body-methods/gem/gemnoui-read_msms.o: n-body-methods/gem/read_msms.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT n-body-methods/gem/gemnoui-read_msms.o -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-read_msms.Tpo -c -o n-body-methods/gem/gemnoui-read_msms.o `test -f 'n-body-methods/gem/read_msms.c' || echo '$(srcdir)/'`n-body-methods/gem/read_msms.c
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-read_msms.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-read_msms.Po
#	$(AM_V_CC) \
#	source='n-body-methods/gem/read_msms.c' object='n-body-methods/gem/gemnoui-read_msms.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o n-body-methods/gem/gemnoui-read_msms.o `test -f 'n-body-methods/gem/read_msms.c' || echo '$(srcdir)/'`n-body-methods/gem/read_msms.c

n-body-methods/gem/gemnoui-read_msms.obj: n-body-methods/gem/read_msms.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT n-body-methods/gem/gemnoui-read_msms.obj -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-read_msms.Tpo -c -o n-body-methods/gem/gemnoui-read_msms.obj `if test -f 'n-body-methods/gem/read_msms.c'; then $(CYGPATH_W) 'n-body-methods/gem/read_msms.c'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/read_msms.c'; fi`
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-read_msms.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-read_msms.Po
#	$(AM_V_CC) \
#	source='n-body-methods/gem/read_msms.c' object='n-body-methods/gem/gemnoui-read_msms.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o n-body-methods/gem/gemnoui-read_msms.obj `if test -f 'n-body-methods/gem/read_msms.c'; then $(CYGPATH_W) 'n-body-methods/gem/read_msms.c'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/read_msms.c'; fi`

n-body-methods/gem/gemnoui-run_msms.o: n-body-methods/gem/run_msms.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT n-body-methods/gem/gemnoui-run_msms.o -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-run_msms.Tpo -c -o n-body-methods/gem/gemnoui-run_msms.o `test -f 'n-body-methods/gem/run_msms.c' || echo '$(srcdir)/'`n-body-methods/gem/run_msms.c
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-run_msms.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-run_msms.Po
#	$(AM_V_CC) \
#	source='n-body-methods/gem/run_msms.c' object='n-body-methods/gem/gemnoui-run_msms.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o n-body-methods/gem/gemnoui-run_msms.o `test -f 'n-body-methods/gem/run_msms.c' || echo '$(srcdir)/'`n-body-methods/gem/run_msms.c

n-body-methods/gem/gemnoui-run_msms.obj: n-body-methods/gem/run_msms.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT n-body-methods/gem/gemnoui-run_msms.obj -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-run_msms.Tpo -c -o n-body-methods/gem/gemnoui-run_msms.obj `if test -f 'n-body-methods/gem/run_msms.c'; then $(CYGPATH_W) 'n-body-methods/gem/run_msms.c'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/run_msms.c'; fi`
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-run_msms.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-run_msms.Po
#	$(AM_V_CC) \
#	source='n-body-methods/gem/run_msms.c' object='n-body-methods/gem/gemnoui-run_msms.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o n-body-methods/gem/gemnoui-run_msms.obj `if test -f 'n-body-methods/gem/run_msms.c'; then $(CYGPATH_W) 'n-body-methods/gem/run_msms.c'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/run_msms.c'; fi`

n-body-methods/gem/gemnoui-write_avs.o: n-body-methods/gem/write_avs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT n-body-methods/gem/gemnoui-write_avs.o -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-write_avs.Tpo -c -o n-body-methods/gem/gemnoui-write_avs.o `test -f 'n-body-methods/gem/write_avs.c' || echo '$(srcdir)/'`n-body-methods/gem/write_avs.c
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-write_avs.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-write_avs.Po
#	$(AM_V_CC) \
#	source='n-body-methods/gem/write_avs.c' object='n-body-methods/gem/gemnoui-write_avs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o n-body-methods/gem/gemnoui-write_avs.o `test -f 'n-body-methods/gem/write_avs.c' || echo '$(srcdir)/'`n-body-methods/gem/write_avs.c

n-body-methods/gem/gemnoui-write_avs.obj: n-body-methods/gem/write_avs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT n-body-methods/gem/gemnoui-write_avs.obj -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-write_avs.Tpo -c -o n-body-methods/gem/gemnoui-write_avs.obj `if test -f 'n-body-methods/gem/write_avs.c'; then $(CYGPATH_W) 'n-body-methods/gem/write_avs.c'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/write_avs.c'; fi`
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-write_avs.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-write_avs.Po
#	$(AM_V_CC) \
#	source='n-body-methods/gem/write_avs.c' object='n-body-methods/gem/gemnoui-write_avs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o n-body-methods/gem/gemnoui-write_avs.obj `if test -f 'n-body-methods/gem/write_avs.c'; then $(CYGPATH_W) 'n-body-methods/gem/write_avs.c'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/write_avs.c'; fi`

n-body-methods/gem/gemnoui-write_xyzr.o: n-body-methods/gem/write_xyzr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT n-body-methods/gem/gemnoui-write_xyzr.o -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-write_xyzr.Tpo -c -o n-body-methods/gem/gemnoui-write_xyzr.o `test -f 'n-body-methods/gem/write_xyzr.c' || echo '$(srcdir)/'`n-body-methods/gem/write_xyzr.c
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-write_xyzr.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-write_xyzr.Po
#	$(AM_V_CC) \
#	source='n-body-methods/gem/write_xyzr.c' object='n-body-methods/gem/gemnoui-write_xyzr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o n-body-methods/gem/gemnoui-write_xyzr.o `test -f 'n-body-methods/gem/write_xyzr.c' || echo '$(srcdir)/'`n-body-methods/gem/write_xyzr.c

n-body-methods/gem/gemnoui-write_xyzr.obj: n-body-methods/gem/write_xyzr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT n-body-methods/gem/gemnoui-write_xyzr.obj -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-write_xyzr.Tpo -c -o n-body-methods/gem/gemnoui-write_xyzr.obj `if test -f 'n-body-methods/gem/write_xyzr.c'; then $(CYGPATH_W) 'n-body-methods/gem/write_xyzr.c'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/write_xyzr.c'; fi`
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-write_xyzr.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-write_xyzr.Po
#	$(AM_V_CC) \
#	source='n-body-methods/gem/write_xyzr.c' object='n-body-methods/gem/gemnoui-write_xyzr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o n-body-methods/gem/gemnoui-write_xyzr.obj `if test -f 'n-body-methods/gem/write_xyzr.c'; then $(CYGPATH_W) 'n-body-methods/gem/write_xyzr.c'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/write_xyzr.c'; fi`

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

spectral-methods/fft/src/opencl/fft/clfft-fft.o: spectral-methods/fft/src/opencl/fft/fft.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spectral-methods/fft/src/opencl/fft/clfft-fft.o -MD -MP -MF spectral-methods/fft/src/opencl/fft/$(DEPDIR)/clfft-fft.Tpo -c -o spectral-methods/fft/src/opencl/fft/clfft-fft.o `test -f 'spectral-methods/fft/src/opencl/fft/fft.cpp' || echo '$(srcdir)/'`spectral-methods/fft/src/opencl/fft/fft.cpp
	$(AM_V_at)$(am__mv) spectral-methods/fft/src/opencl/fft/$(DEPDIR)/clfft-fft.Tpo spectral-methods/fft/src/opencl/fft/$(DEPDIR)/clfft-fft.Po
#	$(AM_V_CXX) \
#	source='spectral-methods/fft/src/opencl/fft/fft.cpp' object='spectral-methods/fft/src/opencl/fft/clfft-fft.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spectral-methods/fft/src/opencl/fft/clfft-fft.o `test -f 'spectral-methods/fft/src/opencl/fft/fft.cpp' || echo '$(srcdir)/'`spectral-methods/fft/src/opencl/fft/fft.cpp

spectral-methods/fft/src/opencl/fft/clfft-fft.obj: spectral-methods/fft/src/opencl/fft/fft.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spectral-methods/fft/src/opencl/fft/clfft-fft.obj -MD -MP -MF spectral-methods/fft/src/opencl/fft/$(DEPDIR)/clfft-fft.Tpo -c -o spectral-methods/fft/src/opencl/fft/clfft-fft.obj `if test -f 'spectral-methods/fft/src/opencl/fft/fft.cpp'; then $(CYGPATH_W) 'spectral-methods/fft/src/opencl/fft/fft.cpp'; else $(CYGPATH_W) '$(srcdir)/spectral-methods/fft/src/opencl/fft/fft.cpp'; fi`
	$(AM_V_at)$(am__mv) spectral-methods/fft/src/opencl/fft/$(DEPDIR)/clfft-fft.Tpo spectral-methods/fft/src/opencl/fft/$(DEPDIR)/clfft-fft.Po
#	$(AM_V_CXX) \
#	source='spectral-methods/fft/src/opencl/fft/fft.cpp' object='spectral-methods/fft/src/opencl/fft/clfft-fft.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spectral-methods/fft/src/opencl/fft/clfft-fft.obj `if test -f 'spectral-methods/fft/src/opencl/fft/fft.cpp'; then $(CYGPATH_W) 'spectral-methods/fft/src/opencl/fft/fft.cpp'; else $(CYGPATH_W) '$(srcdir)/spectral-methods/fft/src/opencl/fft/fft.cpp'; fi`

spectral-methods/fft/src/opencl/fft/clfft-fftlib.o: spectral-methods/fft/src/opencl/fft/fftlib.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spectral-methods/fft/src/opencl/fft/clfft-fftlib.o -MD -MP -MF spectral-methods/fft/src/opencl/fft/$(DEPDIR)/clfft-fftlib.Tpo -c -o spectral-methods/fft/src/opencl/fft/clfft-fftlib.o `test -f 'spectral-methods/fft/src/opencl/fft/fftlib.cpp' || echo '$(srcdir)/'`spectral-methods/fft/src/opencl/fft/fftlib.cpp
	$(AM_V_at)$(am__mv) spectral-methods/fft/src/opencl/fft/$(DEPDIR)/clfft-fftlib.Tpo spectral-methods/fft/src/opencl/fft/$(DEPDIR)/clfft-fftlib.Po
#	$(AM_V_CXX) \
#	source='spectral-methods/fft/src/opencl/fft/fftlib.cpp' object='spectral-methods/fft/src/opencl/fft/clfft-fftlib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spectral-methods/fft/src/opencl/fft/clfft-fftlib.o `test -f 'spectral-methods/fft/src/opencl/fft/fftlib.cpp' || echo '$(srcdir)/'`spectral-methods/fft/src/opencl/fft/fftlib.cpp

spectral-methods/fft/src/opencl/fft/clfft-fftlib.obj: spectral-methods/fft/src/opencl/fft/fftlib.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spectral-methods/fft/src/opencl/fft/clfft-fftlib.obj -MD -MP -MF spectral-methods/fft/src/opencl/fft/$(DEPDIR)/clfft-fftlib.Tpo -c -o spectral-methods/fft/src/opencl/fft/clfft-fftlib.obj `if test -f 'spectral-methods/fft/src/opencl/fft/fftlib.cpp'; then $(CYGPATH_W) 'spectral-methods/fft/src/opencl/fft/fftlib.cpp'; else $(CYGPATH_W) '$(srcdir)/spectral-methods/fft/src/opencl/fft/fftlib.cpp'; fi`
	$(AM_V_at)$(am__mv) spectral-methods/fft/src/opencl/fft/$(DEPDIR)/clfft-fftlib.Tpo spectral-methods/fft/src/opencl/fft/$(DEPDIR)/clfft-fftlib.Po
#	$(AM_V_CXX) \
#	source='spectral-methods/fft/src/opencl/fft/fftlib.cpp' object='spectral-methods/fft/src/opencl/fft/clfft-fftlib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spectral-methods/fft/src/opencl/fft/clfft-fftlib.obj `if test -f 'spectral-methods/fft/src/opencl/fft/fftlib.cpp'; then $(CYGPATH_W) 'spectral-methods/fft/src/opencl/fft/fftlib.cpp'; else $(CYGPATH_W) '$(srcdir)/spectral-methods/fft/src/opencl/fft/fftlib.cpp'; fi`

spectral-methods/fft/src/opencl/common/clfft-main.o: spectral-methods/fft/src/opencl/common/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spectral-methods/fft/src/opencl/common/clfft-main.o -MD -MP -MF spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-main.Tpo -c -o spectral-methods/fft/src/opencl/common/clfft-main.o `test -f 'spectral-methods/fft/src/opencl/common/main.cpp' || echo '$(srcdir)/'`spectral-methods/fft/src/opencl/common/main.cpp
	$(AM_V_at)$(am__mv) spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-main.Tpo spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-main.Po
#	$(AM_V_CXX) \
#	source='spectral-methods/fft/src/opencl/common/main.cpp' object='spectral-methods/fft/src/opencl/common/clfft-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spectral-methods/fft/src/opencl/common/clfft-main.o `test -f 'spectral-methods/fft/src/opencl/common/main.cpp' || echo '$(srcdir)/'`spectral-methods/fft/src/opencl/common/main.cpp

spectral-methods/fft/src/opencl/common/clfft-main.obj: spectral-methods/fft/src/opencl/common/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spectral-methods/fft/src/opencl/common/clfft-main.obj -MD -MP -MF spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-main.Tpo -c -o spectral-methods/fft/src/opencl/common/clfft-main.obj `if test -f 'spectral-methods/fft/src/opencl/common/main.cpp'; then $(CYGPATH_W) 'spectral-methods/fft/src/opencl/common/main.cpp'; else $(CYGPATH_W) '$(srcdir)/spectral-methods/fft/src/opencl/common/main.cpp'; fi`
	$(AM_V_at)$(am__mv) spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-main.Tpo spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-main.Po
#	$(AM_V_CXX) \
#	source='spectral-methods/fft/src/opencl/common/main.cpp' object='spectral-methods/fft/src/opencl/common/clfft-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spectral-methods/fft/src/opencl/common/clfft-main.obj `if test -f 'spectral-methods/fft/src/opencl/common/main.cpp'; then $(CYGPATH_W) 'spectral-methods/fft/src/opencl/common/main.cpp'; else $(CYGPATH_W) '$(srcdir)/spectral-methods/fft/src/opencl/common/main.cpp'; fi`

spectral-methods/fft/src/opencl/common/clfft-Event.o: spectral-methods/fft/src/opencl/common/Event.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spectral-methods/fft/src/opencl/common/clfft-Event.o -MD -MP -MF spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-Event.Tpo -c -o spectral-methods/fft/src/opencl/common/clfft-Event.o `test -f 'spectral-methods/fft/src/opencl/common/Event.cpp' || echo '$(srcdir)/'`spectral-methods/fft/src/opencl/common/Event.cpp
	$(AM_V_at)$(am__mv) spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-Event.Tpo spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-Event.Po
#	$(AM_V_CXX) \
#	source='spectral-methods/fft/src/opencl/common/Event.cpp' object='spectral-methods/fft/src/opencl/common/clfft-Event.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spectral-methods/fft/src/opencl/common/clfft-Event.o `test -f 'spectral-methods/fft/src/opencl/common/Event.cpp' || echo '$(srcdir)/'`spectral-methods/fft/src/opencl/common/Event.cpp

spectral-methods/fft/src/opencl/common/clfft-Event.obj: spectral-methods/fft/src/opencl/common/Event.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spectral-methods/fft/src/opencl/common/clfft-Event.obj -MD -MP -MF spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-Event.Tpo -c -o spectral-methods/fft/src/opencl/common/clfft-Event.obj `if test -f 'spectral-methods/fft/src/opencl/common/Event.cpp'; then $(CYGPATH_W) 'spectral-methods/fft/src/opencl/common/Event.cpp'; else $(CYGPATH_W) '$(srcdir)/spectral-methods/fft/src/opencl/common/Event.cpp'; fi`
	$(AM_V_at)$(am__mv) spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-Event.Tpo spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-Event.Po
#	$(AM_V_CXX) \
#	source='spectral-methods/fft/src/opencl/common/Event.cpp' object='spectral-methods/fft/src/opencl/common/clfft-Event.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spectral-methods/fft/src/opencl/common/clfft-Event.obj `if test -f 'spectral-methods/fft/src/opencl/common/Event.cpp'; then $(CYGPATH_W) 'spectral-methods/fft/src/opencl/common/Event.cpp'; else $(CYGPATH_W) '$(srcdir)/spectral-methods/fft/src/opencl/common/Event.cpp'; fi`

spectral-methods/fft/src/opencl/common/clfft-OpenCLDeviceInfo.o: spectral-methods/fft/src/opencl/common/OpenCLDeviceInfo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spectral-methods/fft/src/opencl/common/clfft-OpenCLDeviceInfo.o -MD -MP -MF spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-OpenCLDeviceInfo.Tpo -c -o spectral-methods/fft/src/opencl/common/clfft-OpenCLDeviceInfo.o `test -f 'spectral-methods/fft/src/opencl/common/OpenCLDeviceInfo.cpp' || echo '$(srcdir)/'`spectral-methods/fft/src/opencl/common/OpenCLDeviceInfo.cpp
	$(AM_V_at)$(am__mv) spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-OpenCLDeviceInfo.Tpo spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-OpenCLDeviceInfo.Po
#	$(AM_V_CXX) \
#	source='spectral-methods/fft/src/opencl/common/OpenCLDeviceInfo.cpp' object='spectral-methods/fft/src/opencl/common/clfft-OpenCLDeviceInfo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spectral-methods/fft/src/opencl/common/clfft-OpenCLDeviceInfo.o `test -f 'spectral-methods/fft/src/opencl/common/OpenCLDeviceInfo.cpp' || echo '$(srcdir)/'`spectral-methods/fft/src/opencl/common/OpenCLDeviceInfo.cpp

spectral-methods/fft/src/opencl/common/clfft-OpenCLDeviceInfo.obj: spectral-methods/fft/src/opencl/common/OpenCLDeviceInfo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spectral-methods/fft/src/opencl/common/clfft-OpenCLDeviceInfo.obj -MD -MP -MF spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-OpenCLDeviceInfo.Tpo -c -o spectral-methods/fft/src/opencl/common/clfft-OpenCLDeviceInfo.obj `if test -f 'spectral-methods/fft/src/opencl/common/OpenCLDeviceInfo.cpp'; then $(CYGPATH_W) 'spectral-methods/fft/src/opencl/common/OpenCLDeviceInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/spectral-methods/fft/src/opencl/common/OpenCLDeviceInfo.cpp'; fi`
	$(AM_V_at)$(am__mv) spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-OpenCLDeviceInfo.Tpo spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-OpenCLDeviceInfo.Po
#	$(AM_V_CXX) \
#	source='spectral-methods/fft/src/opencl/common/OpenCLDeviceInfo.cpp' object='spectral-methods/fft/src/opencl/common/clfft-OpenCLDeviceInfo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spectral-methods/fft/src/opencl/common/clfft-OpenCLDeviceInfo.obj `if test -f 'spectral-methods/fft/src/opencl/common/OpenCLDeviceInfo.cpp'; then $(CYGPATH_W) 'spectral-methods/fft/src/opencl/common/OpenCLDeviceInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/spectral-methods/fft/src/opencl/common/OpenCLDeviceInfo.cpp'; fi`

spectral-methods/fft/src/opencl/common/clfft-OpenCLNodePlatformContainer.o: spectral-methods/fft/src/opencl/common/OpenCLNodePlatformContainer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spectral-methods/fft/src/opencl/common/clfft-OpenCLNodePlatformContainer.o -MD -MP -MF spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-OpenCLNodePlatformContainer.Tpo -c -o spectral-methods/fft/src/opencl/common/clfft-OpenCLNodePlatformContainer.o `test -f 'spectral-methods/fft/src/opencl/common/OpenCLNodePlatformContainer.cpp' || echo '$(srcdir)/'`spectral-methods/fft/src/opencl/common/OpenCLNodePlatformContainer.cpp
	$(AM_V_at)$(am__mv) spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-OpenCLNodePlatformContainer.Tpo spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-OpenCLNodePlatformContainer.Po
#	$(AM_V_CXX) \
#	source='spectral-methods/fft/src/opencl/common/OpenCLNodePlatformContainer.cpp' object='spectral-methods/fft/src/opencl/common/clfft-OpenCLNodePlatformContainer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spectral-methods/fft/src/opencl/common/clfft-OpenCLNodePlatformContainer.o `test -f 'spectral-methods/fft/src/opencl/common/OpenCLNodePlatformContainer.cpp' || echo '$(srcdir)/'`spectral-methods/fft/src/opencl/common/OpenCLNodePlatformContainer.cpp

spectral-methods/fft/src/opencl/common/clfft-OpenCLNodePlatformContainer.obj: spectral-methods/fft/src/opencl/common/OpenCLNodePlatformContainer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spectral-methods/fft/src/opencl/common/clfft-OpenCLNodePlatformContainer.obj -MD -MP -MF spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-OpenCLNodePlatformContainer.Tpo -c -o spectral-methods/fft/src/opencl/common/clfft-OpenCLNodePlatformContainer.obj `if test -f 'spectral-methods/fft/src/opencl/common/OpenCLNodePlatformContainer.cpp'; then $(CYGPATH_W) 'spectral-methods/fft/src/opencl/common/OpenCLNodePlatformContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/spectral-methods/fft/src/opencl/common/OpenCLNodePlatformContainer.cpp'; fi`
	$(AM_V_at)$(am__mv) spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-OpenCLNodePlatformContainer.Tpo spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-OpenCLNodePlatformContainer.Po
#	$(AM_V_CXX) \
#	source='spectral-methods/fft/src/opencl/common/OpenCLNodePlatformContainer.cpp' object='spectral-methods/fft/src/opencl/common/clfft-OpenCLNodePlatformContainer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spectral-methods/fft/src/opencl/common/clfft-OpenCLNodePlatformContainer.obj `if test -f 'spectral-methods/fft/src/opencl/common/OpenCLNodePlatformContainer.cpp'; then $(CYGPATH_W) 'spectral-methods/fft/src/opencl/common/OpenCLNodePlatformContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/spectral-methods/fft/src/opencl/common/OpenCLNodePlatformContainer.cpp'; fi`

spectral-methods/fft/src/opencl/common/clfft-OpenCLPlatform.o: spectral-methods/fft/src/opencl/common/OpenCLPlatform.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spectral-methods/fft/src/opencl/common/clfft-OpenCLPlatform.o -MD -MP -MF spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-OpenCLPlatform.Tpo -c -o spectral-methods/fft/src/opencl/common/clfft-OpenCLPlatform.o `test -f 'spectral-methods/fft/src/opencl/common/OpenCLPlatform.cpp' || echo '$(srcdir)/'`spectral-methods/fft/src/opencl/common/OpenCLPlatform.cpp
	$(AM_V_at)$(am__mv) spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-OpenCLPlatform.Tpo spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-OpenCLPlatform.Po
#	$(AM_V_CXX) \
#	source='spectral-methods/fft/src/opencl/common/OpenCLPlatform.cpp' object='spectral-methods/fft/src/opencl/common/clfft-OpenCLPlatform.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spectral-methods/fft/src/opencl/common/clfft-OpenCLPlatform.o `test -f 'spectral-methods/fft/src/opencl/common/OpenCLPlatform.cpp' || echo '$(srcdir)/'`spectral-methods/fft/src/opencl/common/OpenCLPlatform.cpp

spectral-methods/fft/src/opencl/common/clfft-OpenCLPlatform.obj: spectral-methods/fft/src/opencl/common/OpenCLPlatform.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spectral-methods/fft/src/opencl/common/clfft-OpenCLPlatform.obj -MD -MP -MF spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-OpenCLPlatform.Tpo -c -o spectral-methods/fft/src/opencl/common/clfft-OpenCLPlatform.obj `if test -f 'spectral-methods/fft/src/opencl/common/OpenCLPlatform.cpp'; then $(CYGPATH_W) 'spectral-methods/fft/src/opencl/common/OpenCLPlatform.cpp'; else $(CYGPATH_W) '$(srcdir)/spectral-methods/fft/src/opencl/common/OpenCLPlatform.cpp'; fi`
	$(AM_V_at)$(am__mv) spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-OpenCLPlatform.Tpo spectral-methods/fft/src/opencl/common/$(DEPDIR)/clfft-OpenCLPlatform.Po
#	$(AM_V_CXX) \
#	source='spectral-methods/fft/src/opencl/common/OpenCLPlatform.cpp' object='spectral-methods/fft/src/opencl/common/clfft-OpenCLPlatform.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spectral-methods/fft/src/opencl/common/clfft-OpenCLPlatform.obj `if test -f 'spectral-methods/fft/src/opencl/common/OpenCLPlatform.cpp'; then $(CYGPATH_W) 'spectral-methods/fft/src/opencl/common/OpenCLPlatform.cpp'; else $(CYGPATH_W) '$(srcdir)/spectral-methods/fft/src/opencl/common/OpenCLPlatform.cpp'; fi`

spectral-methods/fft/src/common/clfft-OptionParser.o: spectral-methods/fft/src/common/OptionParser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spectral-methods/fft/src/common/clfft-OptionParser.o -MD -MP -MF spectral-methods/fft/src/common/$(DEPDIR)/clfft-OptionParser.Tpo -c -o spectral-methods/fft/src/common/clfft-OptionParser.o `test -f 'spectral-methods/fft/src/common/OptionParser.cpp' || echo '$(srcdir)/'`spectral-methods/fft/src/common/OptionParser.cpp
	$(AM_V_at)$(am__mv) spectral-methods/fft/src/common/$(DEPDIR)/clfft-OptionParser.Tpo spectral-methods/fft/src/common/$(DEPDIR)/clfft-OptionParser.Po
#	$(AM_V_CXX) \
#	source='spectral-methods/fft/src/common/OptionParser.cpp' object='spectral-methods/fft/src/common/clfft-OptionParser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spectral-methods/fft/src/common/clfft-OptionParser.o `test -f 'spectral-methods/fft/src/common/OptionParser.cpp' || echo '$(srcdir)/'`spectral-methods/fft/src/common/OptionParser.cpp

spectral-methods/fft/src/common/clfft-OptionParser.obj: spectral-methods/fft/src/common/OptionParser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spectral-methods/fft/src/common/clfft-OptionParser.obj -MD -MP -MF spectral-methods/fft/src/common/$(DEPDIR)/clfft-OptionParser.Tpo -c -o spectral-methods/fft/src/common/clfft-OptionParser.obj `if test -f 'spectral-methods/fft/src/common/OptionParser.cpp'; then $(CYGPATH_W) 'spectral-methods/fft/src/common/OptionParser.cpp'; else $(CYGPATH_W) '$(srcdir)/spectral-methods/fft/src/common/OptionParser.cpp'; fi`
	$(AM_V_at)$(am__mv) spectral-methods/fft/src/common/$(DEPDIR)/clfft-OptionParser.Tpo spectral-methods/fft/src/common/$(DEPDIR)/clfft-OptionParser.Po
#	$(AM_V_CXX) \
#	source='spectral-methods/fft/src/common/OptionParser.cpp' object='spectral-methods/fft/src/common/clfft-OptionParser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spectral-methods/fft/src/common/clfft-OptionParser.obj `if test -f 'spectral-methods/fft/src/common/OptionParser.cpp'; then $(CYGPATH_W) 'spectral-methods/fft/src/common/OptionParser.cpp'; else $(CYGPATH_W) '$(srcdir)/spectral-methods/fft/src/common/OptionParser.cpp'; fi`

spectral-methods/fft/src/common/clfft-ResultDatabase.o: spectral-methods/fft/src/common/ResultDatabase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spectral-methods/fft/src/common/clfft-ResultDatabase.o -MD -MP -MF spectral-methods/fft/src/common/$(DEPDIR)/clfft-ResultDatabase.Tpo -c -o spectral-methods/fft/src/common/clfft-ResultDatabase.o `test -f 'spectral-methods/fft/src/common/ResultDatabase.cpp' || echo '$(srcdir)/'`spectral-methods/fft/src/common/ResultDatabase.cpp
	$(AM_V_at)$(am__mv) spectral-methods/fft/src/common/$(DEPDIR)/clfft-ResultDatabase.Tpo spectral-methods/fft/src/common/$(DEPDIR)/clfft-ResultDatabase.Po
#	$(AM_V_CXX) \
#	source='spectral-methods/fft/src/common/ResultDatabase.cpp' object='spectral-methods/fft/src/common/clfft-ResultDatabase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spectral-methods/fft/src/common/clfft-ResultDatabase.o `test -f 'spectral-methods/fft/src/common/ResultDatabase.cpp' || echo '$(srcdir)/'`spectral-methods/fft/src/common/ResultDatabase.cpp

spectral-methods/fft/src/common/clfft-ResultDatabase.obj: spectral-methods/fft/src/common/ResultDatabase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spectral-methods/fft/src/common/clfft-ResultDatabase.obj -MD -MP -MF spectral-methods/fft/src/common/$(DEPDIR)/clfft-ResultDatabase.Tpo -c -o spectral-methods/fft/src/common/clfft-ResultDatabase.obj `if test -f 'spectral-methods/fft/src/common/ResultDatabase.cpp'; then $(CYGPATH_W) 'spectral-methods/fft/src/common/ResultDatabase.cpp'; else $(CYGPATH_W) '$(srcdir)/spectral-methods/fft/src/common/ResultDatabase.cpp'; fi`
	$(AM_V_at)$(am__mv) spectral-methods/fft/src/common/$(DEPDIR)/clfft-ResultDatabase.Tpo spectral-methods/fft/src/common/$(DEPDIR)/clfft-ResultDatabase.Po
#	$(AM_V_CXX) \
#	source='spectral-methods/fft/src/common/ResultDatabase.cpp' object='spectral-methods/fft/src/common/clfft-ResultDatabase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spectral-methods/fft/src/common/clfft-ResultDatabase.obj `if test -f 'spectral-methods/fft/src/common/ResultDatabase.cpp'; then $(CYGPATH_W) 'spectral-methods/fft/src/common/ResultDatabase.cpp'; else $(CYGPATH_W) '$(srcdir)/spectral-methods/fft/src/common/ResultDatabase.cpp'; fi`

spectral-methods/fft/src/common/clfft-Timer.o: spectral-methods/fft/src/common/Timer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spectral-methods/fft/src/common/clfft-Timer.o -MD -MP -MF spectral-methods/fft/src/common/$(DEPDIR)/clfft-Timer.Tpo -c -o spectral-methods/fft/src/common/clfft-Timer.o `test -f 'spectral-methods/fft/src/common/Timer.cpp' || echo '$(srcdir)/'`spectral-methods/fft/src/common/Timer.cpp
	$(AM_V_at)$(am__mv) spectral-methods/fft/src/common/$(DEPDIR)/clfft-Timer.Tpo spectral-methods/fft/src/common/$(DEPDIR)/clfft-Timer.Po
#	$(AM_V_CXX) \
#	source='spectral-methods/fft/src/common/Timer.cpp' object='spectral-methods/fft/src/common/clfft-Timer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spectral-methods/fft/src/common/clfft-Timer.o `test -f 'spectral-methods/fft/src/common/Timer.cpp' || echo '$(srcdir)/'`spectral-methods/fft/src/common/Timer.cpp

spectral-methods/fft/src/common/clfft-Timer.obj: spectral-methods/fft/src/common/Timer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spectral-methods/fft/src/common/clfft-Timer.obj -MD -MP -MF spectral-methods/fft/src/common/$(DEPDIR)/clfft-Timer.Tpo -c -o spectral-methods/fft/src/common/clfft-Timer.obj `if test -f 'spectral-methods/fft/src/common/Timer.cpp'; then $(CYGPATH_W) 'spectral-methods/fft/src/common/Timer.cpp'; else $(CYGPATH_W) '$(srcdir)/spectral-methods/fft/src/common/Timer.cpp'; fi`
	$(AM_V_at)$(am__mv) spectral-methods/fft/src/common/$(DEPDIR)/clfft-Timer.Tpo spectral-methods/fft/src/common/$(DEPDIR)/clfft-Timer.Po
#	$(AM_V_CXX) \
#	source='spectral-methods/fft/src/common/Timer.cpp' object='spectral-methods/fft/src/common/clfft-Timer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spectral-methods/fft/src/common/clfft-Timer.obj `if test -f 'spectral-methods/fft/src/common/Timer.cpp'; then $(CYGPATH_W) 'spectral-methods/fft/src/common/Timer.cpp'; else $(CYGPATH_W) '$(srcdir)/spectral-methods/fft/src/common/Timer.cpp'; fi`

spectral-methods/fft/src/common/clfft-Option.o: spectral-methods/fft/src/common/Option.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spectral-methods/fft/src/common/clfft-Option.o -MD -MP -MF spectral-methods/fft/src/common/$(DEPDIR)/clfft-Option.Tpo -c -o spectral-methods/fft/src/common/clfft-Option.o `test -f 'spectral-methods/fft/src/common/Option.cpp' || echo '$(srcdir)/'`spectral-methods/fft/src/common/Option.cpp
	$(AM_V_at)$(am__mv) spectral-methods/fft/src/common/$(DEPDIR)/clfft-Option.Tpo spectral-methods/fft/src/common/$(DEPDIR)/clfft-Option.Po
#	$(AM_V_CXX) \
#	source='spectral-methods/fft/src/common/Option.cpp' object='spectral-methods/fft/src/common/clfft-Option.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spectral-methods/fft/src/common/clfft-Option.o `test -f 'spectral-methods/fft/src/common/Option.cpp' || echo '$(srcdir)/'`spectral-methods/fft/src/common/Option.cpp

spectral-methods/fft/src/common/clfft-Option.obj: spectral-methods/fft/src/common/Option.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spectral-methods/fft/src/common/clfft-Option.obj -MD -MP -MF spectral-methods/fft/src/common/$(DEPDIR)/clfft-Option.Tpo -c -o spectral-methods/fft/src/common/clfft-Option.obj `if test -f 'spectral-methods/fft/src/common/Option.cpp'; then $(CYGPATH_W) 'spectral-methods/fft/src/common/Option.cpp'; else $(CYGPATH_W) '$(srcdir)/spectral-methods/fft/src/common/Option.cpp'; fi`
	$(AM_V_at)$(am__mv) spectral-methods/fft/src/common/$(DEPDIR)/clfft-Option.Tpo spectral-methods/fft/src/common/$(DEPDIR)/clfft-Option.Po
#	$(AM_V_CXX) \
#	source='spectral-methods/fft/src/common/Option.cpp' object='spectral-methods/fft/src/common/clfft-Option.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spectral-methods/fft/src/common/clfft-Option.obj `if test -f 'spectral-methods/fft/src/common/Option.cpp'; then $(CYGPATH_W) 'spectral-methods/fft/src/common/Option.cpp'; else $(CYGPATH_W) '$(srcdir)/spectral-methods/fft/src/common/Option.cpp'; fi`

spectral-methods/fft/src/common/clfft-InvalidArgValue.o: spectral-methods/fft/src/common/InvalidArgValue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spectral-methods/fft/src/common/clfft-InvalidArgValue.o -MD -MP -MF spectral-methods/fft/src/common/$(DEPDIR)/clfft-InvalidArgValue.Tpo -c -o spectral-methods/fft/src/common/clfft-InvalidArgValue.o `test -f 'spectral-methods/fft/src/common/InvalidArgValue.cpp' || echo '$(srcdir)/'`spectral-methods/fft/src/common/InvalidArgValue.cpp
	$(AM_V_at)$(am__mv) spectral-methods/fft/src/common/$(DEPDIR)/clfft-InvalidArgValue.Tpo spectral-methods/fft/src/common/$(DEPDIR)/clfft-InvalidArgValue.Po
#	$(AM_V_CXX) \
#	source='spectral-methods/fft/src/common/InvalidArgValue.cpp' object='spectral-methods/fft/src/common/clfft-InvalidArgValue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spectral-methods/fft/src/common/clfft-InvalidArgValue.o `test -f 'spectral-methods/fft/src/common/InvalidArgValue.cpp' || echo '$(srcdir)/'`spectral-methods/fft/src/common/InvalidArgValue.cpp

spectral-methods/fft/src/common/clfft-InvalidArgValue.obj: spectral-methods/fft/src/common/InvalidArgValue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT spectral-methods/fft/src/common/clfft-InvalidArgValue.obj -MD -MP -MF spectral-methods/fft/src/common/$(DEPDIR)/clfft-InvalidArgValue.Tpo -c -o spectral-methods/fft/src/common/clfft-InvalidArgValue.obj `if test -f 'spectral-methods/fft/src/common/InvalidArgValue.cpp'; then $(CYGPATH_W) 'spectral-methods/fft/src/common/InvalidArgValue.cpp'; else $(CYGPATH_W) '$(srcdir)/spectral-methods/fft/src/common/InvalidArgValue.cpp'; fi`
	$(AM_V_at)$(am__mv) spectral-methods/fft/src/common/$(DEPDIR)/clfft-InvalidArgValue.Tpo spectral-methods/fft/src/common/$(DEPDIR)/clfft-InvalidArgValue.Po
#	$(AM_V_CXX) \
#	source='spectral-methods/fft/src/common/InvalidArgValue.cpp' object='spectral-methods/fft/src/common/clfft-InvalidArgValue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(clfft_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o spectral-methods/fft/src/common/clfft-InvalidArgValue.obj `if test -f 'spectral-methods/fft/src/common/InvalidArgValue.cpp'; then $(CYGPATH_W) 'spectral-methods/fft/src/common/InvalidArgValue.cpp'; else $(CYGPATH_W) '$(srcdir)/spectral-methods/fft/src/common/InvalidArgValue.cpp'; fi`

n-body-methods/gem/gemnoui-calculate_potential.o: n-body-methods/gem/calculate_potential.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT n-body-methods/gem/gemnoui-calculate_potential.o -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-calculate_potential.Tpo -c -o n-body-methods/gem/gemnoui-calculate_potential.o `test -f 'n-body-methods/gem/calculate_potential.cpp' || echo '$(srcdir)/'`n-body-methods/gem/calculate_potential.cpp
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-calculate_potential.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-calculate_potential.Po
#	$(AM_V_CXX) \
#	source='n-body-methods/gem/calculate_potential.cpp' object='n-body-methods/gem/gemnoui-calculate_potential.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o n-body-methods/gem/gemnoui-calculate_potential.o `test -f 'n-body-methods/gem/calculate_potential.cpp' || echo '$(srcdir)/'`n-body-methods/gem/calculate_potential.cpp

n-body-methods/gem/gemnoui-calculate_potential.obj: n-body-methods/gem/calculate_potential.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT n-body-methods/gem/gemnoui-calculate_potential.obj -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-calculate_potential.Tpo -c -o n-body-methods/gem/gemnoui-calculate_potential.obj `if test -f 'n-body-methods/gem/calculate_potential.cpp'; then $(CYGPATH_W) 'n-body-methods/gem/calculate_potential.cpp'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/calculate_potential.cpp'; fi`
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-calculate_potential.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-calculate_potential.Po
#	$(AM_V_CXX) \
#	source='n-body-methods/gem/calculate_potential.cpp' object='n-body-methods/gem/gemnoui-calculate_potential.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o n-body-methods/gem/gemnoui-calculate_potential.obj `if test -f 'n-body-methods/gem/calculate_potential.cpp'; then $(CYGPATH_W) 'n-body-methods/gem/calculate_potential.cpp'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/calculate_potential.cpp'; fi`

n-body-methods/gem/gemnoui-check_cmdline.o: n-body-methods/gem/check_cmdline.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT n-body-methods/gem/gemnoui-check_cmdline.o -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-check_cmdline.Tpo -c -o n-body-methods/gem/gemnoui-check_cmdline.o `test -f 'n-body-methods/gem/check_cmdline.cpp' || echo '$(srcdir)/'`n-body-methods/gem/check_cmdline.cpp
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-check_cmdline.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-check_cmdline.Po
#	$(AM_V_CXX) \
#	source='n-body-methods/gem/check_cmdline.cpp' object='n-body-methods/gem/gemnoui-check_cmdline.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o n-body-methods/gem/gemnoui-check_cmdline.o `test -f 'n-body-methods/gem/check_cmdline.cpp' || echo '$(srcdir)/'`n-body-methods/gem/check_cmdline.cpp

n-body-methods/gem/gemnoui-check_cmdline.obj: n-body-methods/gem/check_cmdline.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT n-body-methods/gem/gemnoui-check_cmdline.obj -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-check_cmdline.Tpo -c -o n-body-methods/gem/gemnoui-check_cmdline.obj `if test -f 'n-body-methods/gem/check_cmdline.cpp'; then $(CYGPATH_W) 'n-body-methods/gem/check_cmdline.cpp'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/check_cmdline.cpp'; fi`
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-check_cmdline.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-check_cmdline.Po
#	$(AM_V_CXX) \
#	source='n-body-methods/gem/check_cmdline.cpp' object='n-body-methods/gem/gemnoui-check_cmdline.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o n-body-methods/gem/gemnoui-check_cmdline.obj `if test -f 'n-body-methods/gem/check_cmdline.cpp'; then $(CYGPATH_W) 'n-body-methods/gem/check_cmdline.cpp'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/check_cmdline.cpp'; fi`

n-body-methods/gem/gemnoui-estimate_a.o: n-body-methods/gem/estimate_a.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT n-body-methods/gem/gemnoui-estimate_a.o -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-estimate_a.Tpo -c -o n-body-methods/gem/gemnoui-estimate_a.o `test -f 'n-body-methods/gem/estimate_a.cpp' || echo '$(srcdir)/'`n-body-methods/gem/estimate_a.cpp
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-estimate_a.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-estimate_a.Po
#	$(AM_V_CXX) \
#	source='n-body-methods/gem/estimate_a.cpp' object='n-body-methods/gem/gemnoui-estimate_a.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o n-body-methods/gem/gemnoui-estimate_a.o `test -f 'n-body-methods/gem/estimate_a.cpp' || echo '$(srcdir)/'`n-body-methods/gem/estimate_a.cpp

n-body-methods/gem/gemnoui-estimate_a.obj: n-body-methods/gem/estimate_a.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT n-body-methods/gem/gemnoui-estimate_a.obj -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-estimate_a.Tpo -c -o n-body-methods/gem/gemnoui-estimate_a.obj `if test -f 'n-body-methods/gem/estimate_a.cpp'; then $(CYGPATH_W) 'n-body-methods/gem/estimate_a.cpp'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/estimate_a.cpp'; fi`
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-estimate_a.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-estimate_a.Po
#	$(AM_V_CXX) \
#	source='n-body-methods/gem/estimate_a.cpp' object='n-body-methods/gem/gemnoui-estimate_a.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o n-body-methods/gem/gemnoui-estimate_a.obj `if test -f 'n-body-methods/gem/estimate_a.cpp'; then $(CYGPATH_W) 'n-body-methods/gem/estimate_a.cpp'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/estimate_a.cpp'; fi`

n-body-methods/gem/gemnoui-gem_no_ui.o: n-body-methods/gem/gem_no_ui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT n-body-methods/gem/gemnoui-gem_no_ui.o -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-gem_no_ui.Tpo -c -o n-body-methods/gem/gemnoui-gem_no_ui.o `test -f 'n-body-methods/gem/gem_no_ui.cpp' || echo '$(srcdir)/'`n-body-methods/gem/gem_no_ui.cpp
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-gem_no_ui.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-gem_no_ui.Po
#	$(AM_V_CXX) \
#	source='n-body-methods/gem/gem_no_ui.cpp' object='n-body-methods/gem/gemnoui-gem_no_ui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o n-body-methods/gem/gemnoui-gem_no_ui.o `test -f 'n-body-methods/gem/gem_no_ui.cpp' || echo '$(srcdir)/'`n-body-methods/gem/gem_no_ui.cpp

n-body-methods/gem/gemnoui-gem_no_ui.obj: n-body-methods/gem/gem_no_ui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT n-body-methods/gem/gemnoui-gem_no_ui.obj -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-gem_no_ui.Tpo -c -o n-body-methods/gem/gemnoui-gem_no_ui.obj `if test -f 'n-body-methods/gem/gem_no_ui.cpp'; then $(CYGPATH_W) 'n-body-methods/gem/gem_no_ui.cpp'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/gem_no_ui.cpp'; fi`
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-gem_no_ui.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-gem_no_ui.Po
#	$(AM_V_CXX) \
#	source='n-body-methods/gem/gem_no_ui.cpp' object='n-body-methods/gem/gemnoui-gem_no_ui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o n-body-methods/gem/gemnoui-gem_no_ui.obj `if test -f 'n-body-methods/gem/gem_no_ui.cpp'; then $(CYGPATH_W) 'n-body-methods/gem/gem_no_ui.cpp'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/gem_no_ui.cpp'; fi`

n-body-methods/gem/gemnoui-open_pqr_run_msms.o: n-body-methods/gem/open_pqr_run_msms.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT n-body-methods/gem/gemnoui-open_pqr_run_msms.o -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-open_pqr_run_msms.Tpo -c -o n-body-methods/gem/gemnoui-open_pqr_run_msms.o `test -f 'n-body-methods/gem/open_pqr_run_msms.cpp' || echo '$(srcdir)/'`n-body-methods/gem/open_pqr_run_msms.cpp
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-open_pqr_run_msms.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-open_pqr_run_msms.Po
#	$(AM_V_CXX) \
#	source='n-body-methods/gem/open_pqr_run_msms.cpp' object='n-body-methods/gem/gemnoui-open_pqr_run_msms.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o n-body-methods/gem/gemnoui-open_pqr_run_msms.o `test -f 'n-body-methods/gem/open_pqr_run_msms.cpp' || echo '$(srcdir)/'`n-body-methods/gem/open_pqr_run_msms.cpp

n-body-methods/gem/gemnoui-open_pqr_run_msms.obj: n-body-methods/gem/open_pqr_run_msms.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT n-body-methods/gem/gemnoui-open_pqr_run_msms.obj -MD -MP -MF n-body-methods/gem/$(DEPDIR)/gemnoui-open_pqr_run_msms.Tpo -c -o n-body-methods/gem/gemnoui-open_pqr_run_msms.obj `if test -f 'n-body-methods/gem/open_pqr_run_msms.cpp'; then $(CYGPATH_W) 'n-body-methods/gem/open_pqr_run_msms.cpp'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/open_pqr_run_msms.cpp'; fi`
	$(AM_V_at)$(am__mv) n-body-methods/gem/$(DEPDIR)/gemnoui-open_pqr_run_msms.Tpo n-body-methods/gem/$(DEPDIR)/gemnoui-open_pqr_run_msms.Po
#	$(AM_V_CXX) \
#	source='n-body-methods/gem/open_pqr_run_msms.cpp' object='n-body-methods/gem/gemnoui-open_pqr_run_msms.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gemnoui_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o n-body-methods/gem/gemnoui-open_pqr_run_msms.obj `if test -f 'n-body-methods/gem/open_pqr_run_msms.cpp'; then $(CYGPATH_W) 'n-body-methods/gem/open_pqr_run_msms.cpp'; else $(CYGPATH_W) '$(srcdir)/n-body-methods/gem/open_pqr_run_msms.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod u+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@$(am__cd) '$(distuninstallcheck_dir)' \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) config.h all-local
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f branch-and-bound/astar/$(DEPDIR)/$(am__dirstamp)
	-rm -f branch-and-bound/astar/$(am__dirstamp)
	-rm -f combinational-logic/crc/src-common/$(DEPDIR)/$(am__dirstamp)
	-rm -f combinational-logic/crc/src-common/$(am__dirstamp)
	-rm -f combinational-logic/crc/src-test/$(DEPDIR)/$(am__dirstamp)
	-rm -f combinational-logic/crc/src-test/$(am__dirstamp)
	-rm -f combinational-logic/crc/src/$(DEPDIR)/$(am__dirstamp)
	-rm -f combinational-logic/crc/src/$(am__dirstamp)
	-rm -f dense-linear-algebra/kmeans/$(DEPDIR)/$(am__dirstamp)
	-rm -f dense-linear-algebra/kmeans/$(am__dirstamp)
	-rm -f dense-linear-algebra/lud/$(DEPDIR)/$(am__dirstamp)
	-rm -f dense-linear-algebra/lud/$(am__dirstamp)
	-rm -f dynamic-programming/nw/$(DEPDIR)/$(am__dirstamp)
	-rm -f dynamic-programming/nw/$(am__dirstamp)
	-rm -f dynamic-programming/swat/$(DEPDIR)/$(am__dirstamp)
	-rm -f dynamic-programming/swat/$(am__dirstamp)
	-rm -f finite-state-machine/tdm/$(DEPDIR)/$(am__dirstamp)
	-rm -f finite-state-machine/tdm/$(am__dirstamp)
	-rm -f graph-traversal/bfs/$(DEPDIR)/$(am__dirstamp)
	-rm -f graph-traversal/bfs/$(am__dirstamp)
	-rm -f include/$(DEPDIR)/$(am__dirstamp)
	-rm -f include/$(am__dirstamp)
	-rm -f n-body-methods/gem/$(DEPDIR)/$(am__dirstamp)
	-rm -f n-body-methods/gem/$(am__dirstamp)
	-rm -f opts/$(DEPDIR)/$(am__dirstamp)
	-rm -f opts/$(am__dirstamp)
	-rm -f samplecl/$(DEPDIR)/$(am__dirstamp)
	-rm -f samplecl/$(am__dirstamp)
	-rm -f sparse-linear-algebra/SPMV/src-common/$(DEPDIR)/$(am__dirstamp)
	-rm -f sparse-linear-algebra/SPMV/src-common/$(am__dirstamp)
	-rm -f sparse-linear-algebra/SPMV/src-test/$(DEPDIR)/$(am__dirstamp)
	-rm -f sparse-linear-algebra/SPMV/src-test/$(am__dirstamp)
	-rm -f sparse-linear-algebra/SPMV/src/$(DEPDIR)/$(am__dirstamp)
	-rm -f sparse-linear-algebra/SPMV/src/$(am__dirstamp)
	-rm -f spectral-methods/fft/src/common/$(DEPDIR)/$(am__dirstamp)
	-rm -f spectral-methods/fft/src/common/$(am__dirstamp)
	-rm -f spectral-methods/fft/src/opencl/common/$(DEPDIR)/$(am__dirstamp)
	-rm -f spectral-methods/fft/src/opencl/common/$(am__dirstamp)
	-rm -f spectral-methods/fft/src/opencl/fft/$(DEPDIR)/$(am__dirstamp)
	-rm -f spectral-methods/fft/src/opencl/fft/$(am__dirstamp)
	-rm -f structured-grids/srad/$(DEPDIR)/$(am__dirstamp)
	-rm -f structured-grids/srad/$(am__dirstamp)
	-rm -f unstructured-grids/cfd/$(DEPDIR)/$(am__dirstamp)
	-rm -f unstructured-grids/cfd/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool clean-local \
	clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf branch-and-bound/astar/$(DEPDIR) combinational-logic/crc/src-common/$(DEPDIR) combinational-logic/crc/src-test/$(DEPDIR) combinational-logic/crc/src/$(DEPDIR) dense-linear-algebra/kmeans/$(DEPDIR) dense-linear-algebra/lud/$(DEPDIR) dynamic-programming/nw/$(DEPDIR) dynamic-programming/swat/$(DEPDIR) finite-state-machine/tdm/$(DEPDIR) graph-traversal/bfs/$(DEPDIR) include/$(DEPDIR) n-body-methods/gem/$(DEPDIR) opts/$(DEPDIR) samplecl/$(DEPDIR) sparse-linear-algebra/SPMV/src-common/$(DEPDIR) sparse-linear-algebra/SPMV/src-test/$(DEPDIR) sparse-linear-algebra/SPMV/src/$(DEPDIR) spectral-methods/fft/src/common/$(DEPDIR) spectral-methods/fft/src/opencl/common/$(DEPDIR) spectral-methods/fft/src/opencl/fft/$(DEPDIR) structured-grids/srad/$(DEPDIR) unstructured-grids/cfd/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-exec-local

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf branch-and-bound/astar/$(DEPDIR) combinational-logic/crc/src-common/$(DEPDIR) combinational-logic/crc/src-test/$(DEPDIR) combinational-logic/crc/src/$(DEPDIR) dense-linear-algebra/kmeans/$(DEPDIR) dense-linear-algebra/lud/$(DEPDIR) dynamic-programming/nw/$(DEPDIR) dynamic-programming/swat/$(DEPDIR) finite-state-machine/tdm/$(DEPDIR) graph-traversal/bfs/$(DEPDIR) include/$(DEPDIR) n-body-methods/gem/$(DEPDIR) opts/$(DEPDIR) samplecl/$(DEPDIR) sparse-linear-algebra/SPMV/src-common/$(DEPDIR) sparse-linear-algebra/SPMV/src-test/$(DEPDIR) sparse-linear-algebra/SPMV/src/$(DEPDIR) spectral-methods/fft/src/common/$(DEPDIR) spectral-methods/fft/src/opencl/common/$(DEPDIR) spectral-methods/fft/src/opencl/fft/$(DEPDIR) structured-grids/srad/$(DEPDIR) unstructured-grids/cfd/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS all all-am all-local am--refresh check check-am \
	clean clean-binPROGRAMS clean-generic clean-libtool \
	clean-local clean-noinstLIBRARIES ctags dist dist-all \
	dist-bzip2 dist-gzip dist-lzma dist-shar dist-tarZ dist-xz \
	dist-zip distcheck distclean distclean-compile \
	distclean-generic distclean-hdr distclean-libtool \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-exec-local \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS


gem-all-local:
	cp $(top_srcdir)/n-body-methods/gem/calculate_potential.cl .

gem-exec-local:
	cp $(top_srcdir)/n-body-methods/gem/calculate_potential.cl ${DESTDIR}${bindir}

nw-all-local:
	cp $(top_srcdir)/dynamic-programming/nw/needle_kernel.cl .

nw-exec-local:
	cp $(top_srcdir)/dynamic-programming/nw/needle_kernel.cl ${DESTDIR}${bindir}

swat-all-local:
	cp $(top_srcdir)/dynamic-programming/swat/kernels.cl .

swat-exec-local:
	cp $(top_srcdir)/dynamic-programming/swat/kernels.cl ${DESTDIR}${bindir}

srad-all-local:
	cp $(top_srcdir)/structured-grids/srad/srad_kernel.cl .

srad-exec-local:
	cp $(top_srcdir)/structured-grids/srad/srad_kernel.cl ${DESTDIR}${bindir}

lud-all-local:
	cp $(top_srcdir)/dense-linear-algebra/lud/lud_kernel.cl .

lud-exec-local:
	cp $(top_srcdir)/dense-linear-algebra/lud/lud_kernel.cl ${DESTDIR}${bindir}

kmeans-all-local:
	cp $(top_srcdir)/dense-linear-algebra/kmeans/kmeans_opencl_kernel.cl .

kmeans-exec-local:
	cp $(top_srcdir)/dense-linear-algebra/kmeans/kmeans_opencl_kernel.cl ${DESTDIR}${bindir}

samplecl-all-local:
	cp $(top_srcdir)/samplecl/samplecl_kernel.cl .

samplecl-exec-local:
	cp $(top_srcdir)/samplecl/samplecl_kernel.cl ${DESTDIR}${bindir}

clfft-all-local:
	cp $(top_srcdir)/spectral-methods/fft/src/opencl/fft/fft.cl .

clfft-exec-local:
	cp $(top_srcdir)/spectral-methods/fft/src/opencl/fft/fft.cl ${DESTDIR}${bindir}

csr-all-local:
	cp $(top_srcdir)/sparse-linear-algebra/SPMV/src/spmv_csr_kernel.cl .

csr-exec-local:
	cp $(top_srcdir)/sparse-linear-algebra/SPMV/src/spmv_csr_kernel.cl ${DESTDIR}${bindir}

dwarf-crc-all-local:
	cp $(top_srcdir)/combinational-logic/crc/src/crc_kernel.cl .
	cp $(top_srcdir)/combinational-logic/crc/src/crc_kernel_fpga_optimized.aocx .

dwarf-crc-exec-local:
	cp $(top_srcdir)/combinational-logic/crc/src/crc_algo_kernel_2.cl ${DESTDIR}${bindir}

dwarf-cfd-all-local:
	cp $(top_srcdir)/unstructured-grids/cfd/cfd_kernel.cl .

dwarf-cfd-exec-local:
	cp $(top_srcdir)/unstructured-grids/cfd/cfd_kernel.cl ${DESTDIR}${bindir}

bfs-all-local:
	cp $(top_srcdir)/graph-traversal/bfs/bfs_kernel.cl .

bfs-exec-local:
	cp $(top_srcdir)/graph-traversal/bfs/bfs_kernel.cl ${DESTDIR}${bindir}

tdm-all-local:
	cp $(top_srcdir)/finite-state-machine/tdm/GpuTemporalDataMining.cl .
	cp $(top_srcdir)/finite-state-machine/tdm/strncpy.cl .
	cp $(top_srcdir)/finite-state-machine/tdm/strncmp.cl .
	cp $(top_srcdir)/finite-state-machine/tdm/types.h .

tdm-exec-local:
	cp $(top_srcdir)/finite-state-machine/tdm/GpuTemporalDataMining.cl ${DESTDIR}${bindir}
	cp $(top_srcdir)/finite-state-machine/tdm/strncmp.cl ${DESTDIR}${bindir}
	cp $(top_srcdir)/finite-state-machine/tdm/strncpy.cl ${DESTDIR}${bindir}
	cp $(top_srcdir)/finite-state-machine/tdm/types.h ${DESTDIR}${bindir}

astar-all-local:
	cp $(top_srcdir)/branch-and-bound/astar/astar.cl .

astar-exec-local:
	cp $(top_srcdir)/branch-and-bound/astar/astar.cl ${DESTDIR}${bindir}

#if build_bsort
#include graph-traversal/bitonic-sort/Makefile.mk
#endif

#if build_oesort
#include graph-traversal/oddeven-sort/Makefile.mk
#endif

all-local: $(all_local)

install-exec-local: $(exec_local)

clean-local:
	rm -f *.cl

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
