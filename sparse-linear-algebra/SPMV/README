Compressed Sparse Row
===================

Status: Beta

Compressed Sparse Row, or CSR, is a format for storing sparse matrices by
storing only non-zero values and their positions.  CSR uses three different
arrays to accomplish this.  The first stores only the non-zero values from the
matrix, from left to right then top to bottom.  The second array hold holds the
column position for each value in the first array.  The third array array holds
the locations within the first array that correspond to the start of a new row.
CSR allows for a large amount of space saving, but using one in an algorithm
requires a step to process the data.

Running
-------

Usage: csr -i <file_path> [-v] [-c] [-p] [-a] [-r <num_execs>] [-k <kernel_file-1>][-k <kernel_file-2>]...[-k <kernel_file-n>] [-w <wg_size-1>][-w <wg_size-2>]...[-w <wg_size-m>]
    		-i: Read CSR Matrix from file <file_path>
    		-k: Test SPMV 'n' times, once with each kernel_file-'1..n' - Default is 1 kernel named './spmv_csr_kernel.xxx' where xxx is 'aocx' if USE_AFPGA is defined, 'cl' otherwise.
    		-v: Increase verbosity level by 1 - Default is 0 - Max is 2
    		-c: use CPU
    		-p: Print matrices to stdout in standard (2-D Array) format - Warning: lots of output
    		-a: Affirm results with serial C code on CPU
    		-r: Execute program with same data exactly <num_execs> times to increase sample size - Default is 1
    		-w: Loop through each kernel execution 'm' times, once with each wg_size-'1..m' - Default is 1 iteration with wg_size set to the maximum possible (limited either by the device or the size of the input)

Example: csr -v -p -a -i ../test/sparse-linear-algebra/SPMV/csrmatrix_R1_N4_D500000_S01

Notes
-----

Source code for csr.c and sparse_formats was written by Nathan Bell and Michael
Garland at NVIDIA, and adapted to OpenCl by Joseph Banks and adapted to Altera FPGAs by Tyler Kenney at IBM.
Please see LICENSE.txt for full source license.
